;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: USBFS_descr.asm
;;   Version: 2.10, Updated on 2015/3/4 at 22:27:56
;;  Generated by PSoC Designer 5.4.3191
;;
;;  DESCRIPTION: USB User Module Descriptors
;;
;;  NOTE: User Module APIs conform to the fastcall convention for marshalling
;;        arguments and observe the associated "Registers are volatile" policy.
;;        This means it is the caller's responsibility to preserve any values
;;        in the X and A registers that are still needed after the API
;;        function returns. Even though these registers may be preserved now,
;;        there is no guarantee they will be preserved in future releases.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "USBFS.inc"
include "USBFS_macros.inc"

WIZARD: equ 1
WIZARD_DEFINED_REPORT_STORAGE: equ 1
   ;--------------------------------------------------- 
   ;@PSoC_UserCode_BODY_1@ (Do not change this line.)
   ;---------------------------------------------------
   ; Insert your custom code below this banner
   ;---------------------------------------------------
   ; Redefine the WIZARD equate to 0 below by 
   ; uncommenting the WIZARD: equ 0 line 
   ; to allow your custom descriptor to take effect
   ;--------------------------------------------------- 

   ; WIZARD: equ 0
   ; WIZARD_DEFINED_REPORT_STORAGE: equ 0
   
   ;---------------------------------------------------
   ; Insert your custom code above this banner
   ;---------------------------------------------------
   ;@PSoC_UserCode_END@ (Do not change this line.)

IF WIZARD
;-----------------------------------------------
; USB Descriptors--Generated by the USB Setup Wizard
;-----------------------------------------------
AREA  lit     (ROM,REL,CON)
;----------------------------------------------------------------------
; Descriptor Dispatch Tables
;   The following tables provide the dispatching pointers and
;   descriptor lengths necessary for the request handler to
;   respond to USB requests.
;----------------------------------------------------------------------

;----------------------------------------------------------------------
; Device Dispatch Table
;   for User Module: (USBFS)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_DEVICE_LOOKUP
.LITERAL
USBFS_DEVICE_LOOKUP:                             ;
  LT_START    1                                  ; Number of devices defined for USBFS
  LT_ENTRY    USBFS_D0_CONFIG_LOOKUP, USBFS_D0_CONFIG_DESCR_TABLE
.ENDLITERAL

;----------------------------------------------------------------------
; Configuration Dispatch Table
;   for Device: (USBFS_D0)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_D0_CONFIG_LOOKUP
.LITERAL
USBFS_D0_CONFIG_LOOKUP:                          ;
  LT_START    1                                  ; Number of configurations
  LT_ENTRY    USBFS_D0_C1_EP_SETUP, USBFS_D0_C1_INTERFACE_LOOKUP
.ENDLITERAL

;----------------------------------------------------------------------
; Interface Look Up Table
; 
; This look up table points to three tables.  Each of those tables is
; indexed by the selected interface number provided by the request.
;
; Item 0: HID Report GET_REPORT/SET_REPORT Lookup Table
; Item 1: HID Report Descriptor Transfer Descriptor Table
; Item 2: HID Class Descriptor Transfer Descriptor Table
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_D0_C1_INTERFACE_LOOKUP
.LITERAL
USBFS_D0_C1_INTERFACE_LOOKUP:                    ;
  DW    USBFS_D0_C1_INTERFACE_RPT_LOOKUP         ; Interface GET_REPORT/SET_REPORT Lookup Table
  DW    USBFS_D0_C1_HID_RPT_DESCR_TABLE          ; HID Report Descriptor Transfer Descriptor Table
  DW    USBFS_D0_C1_HID_CLASS_DESCR_TABLE        ; HID Class Descriptor Transfer Descriptor Table
.ENDLITERAL

;----------------------------------------------------------------------
; Endpoint Setup Table
; 
; This table provides the data to configure the endpoint mode registers
; for IN/OUT direction.
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_EP_SETUP:                            ;
  DB    USB_DIR_IN                               ; Endpoint EP1(IN)
  DB    USB_DIR_IN                               ; Endpoint EP2(IN)
  DB    USB_DIR_IN                               ; Endpoint EP3(IN)
  DB    USB_DIR_UNUSED                           ; Endpoint EP4 not used for this configuration
.ENDLITERAL

;----------------------------------------------------------------------
; Interface Lookup Table
; 
; This table is indexed by interface number.
;
;----------------------------------------------------------------------
EXPORT USBFS_D0_C1_INTERFACE_RPT_LOOKUP
.LITERAL
USBFS_D0_C1_INTERFACE_RPT_LOOKUP:                ;
  DW    USBFS_D0_C1_I0_HID_RPT_LOOKUP            
  DW    USBFS_D0_C1_I1_HID_RPT_LOOKUP            
  DW    USBFS_D0_C1_I2_HID_RPT_LOOKUP            
.ENDLITERAL

;----------------------------------------------------------------------
; HID Class Descriptor transfer descriptor table
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_D0_C1_HID_CLASS_DESCR_TABLE
.LITERAL
USBFS_D0_C1_HID_CLASS_DESCR_TABLE:               ;
  TD_START_TABLE 3                               ; Number of interfaces/HID Class Descriptors
  TD_ENTRY       USB_DS_ROM, DESCR_SIZE_HID_CLASS, USBFS_D0_C1_I0_HID_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, DESCR_SIZE_HID_CLASS, USBFS_D0_C1_I1_HID_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, DESCR_SIZE_HID_CLASS, USBFS_D0_C1_I2_HID_DESCR_START, NULL_PTR
.ENDLITERAL

;----------------------------------------------------------------------
; HID Report Descriptor transfer descriptor table
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_D0_C1_HID_RPT_DESCR_TABLE
.LITERAL
USBFS_D0_C1_HID_RPT_DESCR_TABLE:                 ;
  TD_START_TABLE 3                               ; Number of interfaces/HID Report Descriptors
  TD_ENTRY       USB_DS_ROM, USBFS_HID_REPORT_2_DESCR_SIZE, USBFS_HID_REPORT_2_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, USBFS_HID_REPORT_1_DESCR_SIZE, USBFS_HID_REPORT_1_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, USBFS_HID_REPORT_3_DESCR_SIZE, USBFS_HID_REPORT_3_DESCR_START, NULL_PTR
.ENDLITERAL
;----------------------------------------------------------------------
; HID Report Lookup Table for (USBFS_D0_C1_I0)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I0_HID_RPT_LOOKUP:                   
  LT_START    4                                  ; 4 Entries
  LT_ENTRY    USBFS_D0_C1_I0_IN_RPTS, NULL_PTR   ; IN Reports
  LT_ENTRY    USBFS_D0_C1_I0_OUT_RPTS, NULL_PTR  ; OUT Reports
  LT_ENTRY    USBFS_D0_C1_I0_FEATURE_RPTS, NULL_PTR; FEATURE Reports
.ENDLITERAL
;----------------------------------------------------------------------
; HID IN Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I0_IN_RPTS:                          
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_2_IN_RPT_SIZE, USBFS_INTERFACE_0_IN_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID OUT Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I0_OUT_RPTS:                         
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_2_OUT_RPT_SIZE, USBFS_INTERFACE_0_OUT_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID FEATURE Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I0_FEATURE_RPTS:                     
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_2_FEATURE_RPT_SIZE, USBFS_INTERFACE_0_FEATURE_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
;----------------------------------------------------------------------
; HID Report Lookup Table for (USBFS_D0_C1_I1)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I1_HID_RPT_LOOKUP:                   
  LT_START    4                                  ; 4 Entries
  LT_ENTRY    USBFS_D0_C1_I1_IN_RPTS, NULL_PTR   ; IN Reports
  LT_ENTRY    USBFS_D0_C1_I1_OUT_RPTS, NULL_PTR  ; OUT Reports
  LT_ENTRY    USBFS_D0_C1_I1_FEATURE_RPTS, NULL_PTR; FEATURE Reports
.ENDLITERAL
;----------------------------------------------------------------------
; HID IN Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I1_IN_RPTS:                          
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_1_IN_RPT_SIZE, USBFS_INTERFACE_1_IN_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID OUT Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I1_OUT_RPTS:                         
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_1_OUT_RPT_SIZE, USBFS_INTERFACE_1_OUT_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID FEATURE Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I1_FEATURE_RPTS:                     
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_1_FEATURE_RPT_SIZE, USBFS_INTERFACE_1_FEATURE_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
;----------------------------------------------------------------------
; HID Report Lookup Table for (USBFS_D0_C1_I2)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I2_HID_RPT_LOOKUP:                   
  LT_START    4                                  ; 4 Entries
  LT_ENTRY    USBFS_D0_C1_I2_IN_RPTS, NULL_PTR   ; IN Reports
  LT_ENTRY    USBFS_D0_C1_I2_OUT_RPTS, NULL_PTR  ; OUT Reports
  LT_ENTRY    USBFS_D0_C1_I2_FEATURE_RPTS, NULL_PTR; FEATURE Reports
.ENDLITERAL
;----------------------------------------------------------------------
; HID IN Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I2_IN_RPTS:                          
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_3_IN_RPT_SIZE, USBFS_INTERFACE_2_IN_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID OUT Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I2_OUT_RPTS:                         
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_3_OUT_RPT_SIZE, USBFS_INTERFACE_2_OUT_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID FEATURE Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_C1_I2_FEATURE_RPTS:                     
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USBFS_HID_RPT_3_FEATURE_RPT_SIZE, USBFS_INTERFACE_2_FEATURE_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------

;----------------------------------------------------------------------
; Configuration Descriptor Table
;  for (USBFS_D0)
;
;	This table provides transfer descriptors for each USB Configuration
; Descriptor
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_CONFIG_DESCR_TABLE:                     ;
  TD_START_TABLE 1                               ; Number of configurations
  TD_ENTRY       USB_DS_ROM, USBFS_D0_C1_DESCR_SIZE, USBFS_D0_C1_DESCR_START, NULL_PTR
.ENDLITERAL

;----------------------------------------------------------------------
; Device Descriptor Table
;
;	This table provides transfer descriptors for each USB Device Descriptor
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_DEVICE_DESCR_TABLE
.LITERAL
USBFS_DEVICE_DESCR_TABLE:                        
  TD_START_TABLE 1                               ; Number of devices
  TD_ENTRY       USB_DS_ROM, USBFS_D0_DESCR_SIZE, USBFS_D0_DESCR_START, NULL_PTR
.ENDLITERAL
;----------------------------------------------------------------------
;----------------------------------------------------------------------
; Interface 0 RAM Allocation (Reused across configurations)
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  InterruptRAM     (RAM,REL,CON)
;----------------------------------------------------------------------
; RAM allocation for IN Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_0_IN_RPT_DATA
EXPORT USBFS_INTERFACE_0_IN_RPT_DATA
_USBFS_INTERFACE_0_IN_RPT_DATA:                  
USBFS_INTERFACE_0_IN_RPT_DATA:                   
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for OUT Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_0_OUT_RPT_DATA
EXPORT USBFS_INTERFACE_0_OUT_RPT_DATA
_USBFS_INTERFACE_0_OUT_RPT_DATA:                 
USBFS_INTERFACE_0_OUT_RPT_DATA:                  
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for FEATURE Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_0_FEATURE_RPT_DATA
EXPORT USBFS_INTERFACE_0_FEATURE_RPT_DATA
_USBFS_INTERFACE_0_FEATURE_RPT_DATA:             
USBFS_INTERFACE_0_FEATURE_RPT_DATA:              
  BLK  8                                         ;
;----------------------------------------------------------------------
ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; Interface 1 RAM Allocation (Reused across configurations)
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  InterruptRAM     (RAM,REL,CON)
;----------------------------------------------------------------------
; RAM allocation for IN Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_1_IN_RPT_DATA
EXPORT USBFS_INTERFACE_1_IN_RPT_DATA
_USBFS_INTERFACE_1_IN_RPT_DATA:                  
USBFS_INTERFACE_1_IN_RPT_DATA:                   
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for OUT Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_1_OUT_RPT_DATA
EXPORT USBFS_INTERFACE_1_OUT_RPT_DATA
_USBFS_INTERFACE_1_OUT_RPT_DATA:                 
USBFS_INTERFACE_1_OUT_RPT_DATA:                  
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for FEATURE Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_1_FEATURE_RPT_DATA
EXPORT USBFS_INTERFACE_1_FEATURE_RPT_DATA
_USBFS_INTERFACE_1_FEATURE_RPT_DATA:             
USBFS_INTERFACE_1_FEATURE_RPT_DATA:              
  BLK  8                                         ;
;----------------------------------------------------------------------
ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; Interface 2 RAM Allocation (Reused across configurations)
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  InterruptRAM     (RAM,REL,CON)
;----------------------------------------------------------------------
; RAM allocation for IN Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_2_IN_RPT_DATA
EXPORT USBFS_INTERFACE_2_IN_RPT_DATA
_USBFS_INTERFACE_2_IN_RPT_DATA:                  
USBFS_INTERFACE_2_IN_RPT_DATA:                   
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for OUT Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_2_OUT_RPT_DATA
EXPORT USBFS_INTERFACE_2_OUT_RPT_DATA
_USBFS_INTERFACE_2_OUT_RPT_DATA:                 
USBFS_INTERFACE_2_OUT_RPT_DATA:                  
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for FEATURE Reports.
;----------------------------------------------------------------------
EXPORT _USBFS_INTERFACE_2_FEATURE_RPT_DATA
EXPORT USBFS_INTERFACE_2_FEATURE_RPT_DATA
_USBFS_INTERFACE_2_FEATURE_RPT_DATA:             
USBFS_INTERFACE_2_FEATURE_RPT_DATA:              
  BLK  8                                         ;
;----------------------------------------------------------------------
ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; Device Descriptor (USBFS_D0)
; This marks the beginning of the Device Descriptor.  This descriptor
; concatenates all of the descriptors in the following format:
;	Device Descriptor
;		Configuration Descriptor (1)
;	  	Interface 1 Descriptor
;				HID Descriptor 1
;			  	Endpoint Descriptor(s)
;			Interface 2 Descriptor
;				HID Descriptor 2
;					Endpoint Descriptor(s)
;		Configuration Descriptor (2)
;			Interface/HID/Endpoint...
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_D0_DESCR_START:                            ;
  DB    18                                       ; Device Descriptor Length (18)
  DB    1                                        ; bDescriptorType: DEVICE
  DWL   0200H                                    ; bcdUSB (ver 2.0)
  DB    0                                        ; bDeviceClass
  DB    0                                        ; bDeviceSubClass 
  DB    0                                        ; bDeviceProtocol 
  DB    8                                        ; bMaxPacketSize0
  DWL   4B4H                                     ; idVendor
  DWL   8052H                                    ; idProduct
  DWL   0000H                                    ; bcdDevice
  DB    STR_HASH_2                               ; iManufacturer
  DB    STR_HASH_3                               ; iProduct
  DB    STR_HASH_0                               ; iSerialNumber
  DB    1                                        ; bNumConfigurations
USBFS_D0_DESCR_END:                              ;
USBFS_D0_DESCR_SIZE:  EQU    USBFS_D0_DESCR_END - USBFS_D0_DESCR_START

;----------------------------------------------------------------------
; Configuration Descriptor (USBFS_D0_C1)
; This marks the beginning of the Configuration Descriptor.  This descriptor
; concatenates all of the descriptors in the following format:
; Configuration Descriptor
;	Interface 1 Descriptor
;		HID Descriptor 1
;			Endpoint Descriptor(s)
;	Interface 2 Descriptor
;		HID Descriptor 2
;			Endpoint Descriptor(s)
;----------------------------------------------------------------------
USBFS_D0_C1_DESCR_START:                         ;
  DB    9                                        ; Configuration Descriptor Length (9)
  DB    2                                        ; bDescriptorType: CONFIGURATION
  DWL   USBFS_D0_C1_DESCR_SIZE                   ; wTotalLength
  DB    3                                        ; bNumInterfaces
  DB    1                                        ; bConfigurationValue
  DB    STR_HASH_0                               ; iConfiguration
  DB    80H | (0 << 6) | (1 << 5)                ; bmAttributes >
  DB    50                                       ; bMaxPower
;----------------------------------------------------------------------
; Interface Descriptor (USBFS_D0_C1_I0)
;----------------------------------------------------------------------
  DB    9                                        ; Interface Descriptor Length (9)
  DB    4                                        ; bDescriptorType: INTERFACE
  DB    0                                        ; bInterfaceNumber (zero based)
  DB    0                                        ; bAlternateSetting
  DB    1                                        ; bNumEndpoints
  DB    3                                        ; bInterfaceClass
  DB    0                                        ; bInterfaceSubClass
  DB    0                                        ; bInterfaceProtocol
  DB    STR_HASH_4                               ; iInterface
;----------------------------------------------------------------------
; HID Class Descriptor (USBFS_D0_C1_I0)
;----------------------------------------------------------------------
USBFS_D0_C1_I0_HID_DESCR_START:                  
  DB    9                                        ; bLength--HID Class Descriptor Length (9)
  DB    0x21                                     ; bDescriptorType: HID Class
  DWL   0x0111                                   ; bcdHID
  DB    0                                        ; bCountryCode
  DB    1                                        ; bNumDescriptors
  DB    34                                       ; bDescriptorType
  DWL   USBFS_HID_REPORT_2_DESCR_SIZE            ; wDescriptorLength
;----------------------------------------------------------------------
; Endpoint Descriptor (USBFS_D0_C1_I0_E0)
;----------------------------------------------------------------------
  DB    7                                        ; Endpoint Descriptor Length (7)
  DB    5                                        ; bDescriptorType: ENDPOINT
  DB    (EP1 | USB_DIR_IN)                       ; bEndpointAddress
  DB    3                                        ; bmAttributes
  DWL   8                                        ; wMaxPacketSize
  DB    10                                       ; bInterval
;----------------------------------------------------------------------
; Interface Descriptor (USBFS_D0_C1_I1)
;----------------------------------------------------------------------
  DB    9                                        ; Interface Descriptor Length (9)
  DB    4                                        ; bDescriptorType: INTERFACE
  DB    1                                        ; bInterfaceNumber (zero based)
  DB    0                                        ; bAlternateSetting
  DB    1                                        ; bNumEndpoints
  DB    3                                        ; bInterfaceClass
  DB    0                                        ; bInterfaceSubClass
  DB    0                                        ; bInterfaceProtocol
  DB    STR_HASH_5                               ; iInterface
;----------------------------------------------------------------------
; HID Class Descriptor (USBFS_D0_C1_I1)
;----------------------------------------------------------------------
USBFS_D0_C1_I1_HID_DESCR_START:                  
  DB    9                                        ; bLength--HID Class Descriptor Length (9)
  DB    0x21                                     ; bDescriptorType: HID Class
  DWL   0x0111                                   ; bcdHID
  DB    0                                        ; bCountryCode
  DB    1                                        ; bNumDescriptors
  DB    34                                       ; bDescriptorType
  DWL   USBFS_HID_REPORT_1_DESCR_SIZE            ; wDescriptorLength
;----------------------------------------------------------------------
; Endpoint Descriptor (USBFS_D0_C1_I1_E0)
;----------------------------------------------------------------------
  DB    7                                        ; Endpoint Descriptor Length (7)
  DB    5                                        ; bDescriptorType: ENDPOINT
  DB    (EP2 | USB_DIR_IN)                       ; bEndpointAddress
  DB    3                                        ; bmAttributes
  DWL   8                                        ; wMaxPacketSize
  DB    10                                       ; bInterval
;----------------------------------------------------------------------
; Interface Descriptor (USBFS_D0_C1_I2)
;----------------------------------------------------------------------
  DB    9                                        ; Interface Descriptor Length (9)
  DB    4                                        ; bDescriptorType: INTERFACE
  DB    2                                        ; bInterfaceNumber (zero based)
  DB    0                                        ; bAlternateSetting
  DB    1                                        ; bNumEndpoints
  DB    3                                        ; bInterfaceClass
  DB    0                                        ; bInterfaceSubClass
  DB    0                                        ; bInterfaceProtocol
  DB    STR_HASH_6                               ; iInterface
;----------------------------------------------------------------------
; HID Class Descriptor (USBFS_D0_C1_I2)
;----------------------------------------------------------------------
USBFS_D0_C1_I2_HID_DESCR_START:                  
  DB    9                                        ; bLength--HID Class Descriptor Length (9)
  DB    0x21                                     ; bDescriptorType: HID Class
  DWL   0x0111                                   ; bcdHID
  DB    0                                        ; bCountryCode
  DB    1                                        ; bNumDescriptors
  DB    34                                       ; bDescriptorType
  DWL   USBFS_HID_REPORT_3_DESCR_SIZE            ; wDescriptorLength
;----------------------------------------------------------------------
; Endpoint Descriptor (USBFS_D0_C1_I2_E0)
;----------------------------------------------------------------------
  DB    7                                        ; Endpoint Descriptor Length (7)
  DB    5                                        ; bDescriptorType: ENDPOINT
  DB    (EP3 | USB_DIR_IN)                       ; bEndpointAddress
  DB    3                                        ; bmAttributes
  DWL   8                                        ; wMaxPacketSize
  DB    10                                       ; bInterval
;----------------------------------------------------------------------
USBFS_D0_C1_DESCR_END:
USBFS_D0_C1_DESCR_SIZE:	EQU	(USBFS_D0_C1_DESCR_END - USBFS_D0_C1_DESCR_START)
.ENDLITERAL
;----------------------------------------------------------------------
; HID Class Report Descriptors
;
; This section contains the HID Class Report Descriptors generated
; by the USB User Module Descriptor Generator
;
;----------------------------------------------------------------------
; HID Report Descriptor (HID_RPT_1}
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_HID_REPORT_1_DESCR_START:                  ;
    DB     05H, 01H                              ; Usage Page
    DB     09H, 02H                              ; Usage
    DB     A1H, 01H                              ; Collection
    DB     09H, 01H                              ; Usage
    DB     A1H, 00H                              ; Collection
    DB     05H, 09H                              ; Usage Page
    DB     19H, 01H                              ; Usage Minimum
    DB     29H, 03H                              ; Usage Maximum
    DB     15H, 00H                              ; Logical Minimum
    DB     25H, 01H                              ; Logical Maximum
    DB     95H, 03H                              ; Report Count
    DB     75H, 01H                              ; Report Size
    DB     81H, 02H                              ; Input
    DB     95H, 01H                              ; Report Count
    DB     75H, 05H                              ; Report Size
    DB     81H, 01H                              ; Input
    DB     05H, 01H                              ; Usage Page
    DB     09H, 30H                              ; Usage
    DB     09H, 31H                              ; Usage
    DB     16H, 80H, FFH                         ; Logical Minimum
    DB     26H, 80H, 00H                         ; Logical Maximum
    DB     75H, 08H                              ; Report Size
    DB     95H, 02H                              ; Report Count
    DB     81H, 06H                              ; Input
    DB     C0H                                   ; End Collection
    DB     C0H                                   ; End Collection
USBFS_HID_REPORT_1_DESCR_END:                    ;
USBFS_HID_REPORT_1_DESCR_SIZE:  EQU    (USBFS_HID_REPORT_1_DESCR_END - USBFS_HID_REPORT_1_DESCR_START)
.ENDLITERAL
;----------------------------------------------------------------------
; End HID Report Descriptor (HID_RPT_1}
;----------------------------------------------------------------------
; HID Report Descriptor (HID_RPT_2}
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_HID_REPORT_2_DESCR_START:                  ;
    DB     05H, 01H                              ; Usage Page
    DB     09H, 06H                              ; Usage
    DB     A1H, 01H                              ; Collection
    DB     05H, 07H                              ; Usage Page
    DB     19H, E0H                              ; Usage Minimum
    DB     29H, E7H                              ; Usage Maximum
    DB     15H, 00H                              ; Logical Minimum
    DB     25H, 01H                              ; Logical Maximum
    DB     75H, 01H                              ; Report Size
    DB     95H, 08H                              ; Report Count
    DB     81H, 02H                              ; Input
    DB     95H, 01H                              ; Report Count
    DB     75H, 08H                              ; Report Size
    DB     81H, 01H                              ; Input
    DB     95H, 05H                              ; Report Count
    DB     75H, 01H                              ; Report Size
    DB     05H, 08H                              ; Usage Page
    DB     19H, 01H                              ; Usage Minimum
    DB     29H, 05H                              ; Usage Maximum
    DB     B1H, 02H                              ; Feature
    DB     95H, 01H                              ; Report Count
    DB     75H, 03H                              ; Report Size
    DB     B1H, 01H                              ; Feature
    DB     95H, 06H                              ; Report Count
    DB     75H, 08H                              ; Report Size
    DB     15H, 00H                              ; Logical Minimum
    DB     25H, 65H                              ; Logical Maximum
    DB     05H, 07H                              ; Usage Page
    DB     19H, 00H                              ; Usage Minimum
    DB     29H, 65H                              ; Usage Maximum
    DB     81H, 00H                              ; Input
    DB     C0H                                   ; End Collection
USBFS_HID_REPORT_2_DESCR_END:                    ;
USBFS_HID_REPORT_2_DESCR_SIZE:  EQU    (USBFS_HID_REPORT_2_DESCR_END - USBFS_HID_REPORT_2_DESCR_START)
.ENDLITERAL
;----------------------------------------------------------------------
; End HID Report Descriptor (HID_RPT_2}
;----------------------------------------------------------------------
; HID Report Descriptor (HID_RPT_3}
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USBFS_HID_REPORT_3_DESCR_START:                  ;
    DB     05H, 01H                              ; Usage Page
    DB     09H, 05H                              ; Usage
    DB     A1H, 01H                              ; Collection
    DB     09H, 01H                              ; Usage
    DB     A1H, 00H                              ; Collection
    DB     09H, 30H                              ; Usage
    DB     09H, 31H                              ; Usage
    DB     15H, 00H                              ; Logical Minimum
    DB     26H, FFH, 00H                         ; Logical Maximum
    DB     75H, 08H                              ; Report Size
    DB     95H, 02H                              ; Report Count
    DB     81H, 02H                              ; Input
    DB     C0H                                   ; End Collection
    DB     05H, 09H                              ; Usage Page
    DB     19H, 01H                              ; Usage Minimum
    DB     29H, 05H                              ; Usage Maximum
    DB     15H, 00H                              ; Logical Minimum
    DB     25H, 01H                              ; Logical Maximum
    DB     75H, 01H                              ; Report Size
    DB     95H, 05H                              ; Report Count
    DB     81H, 02H                              ; Input
    DB     95H, 01H                              ; Report Count
    DB     75H, 03H                              ; Report Size
    DB     81H, 03H                              ; Input
    DB     C0H                                   ; End Collection
USBFS_HID_REPORT_3_DESCR_END:                    ;
USBFS_HID_REPORT_3_DESCR_SIZE:  EQU    (USBFS_HID_REPORT_3_DESCR_END - USBFS_HID_REPORT_3_DESCR_START)
.ENDLITERAL
;----------------------------------------------------------------------
; End HID Report Descriptor (HID_RPT_3}
;----------------------------------------------------------------------
; HID Report Sizes (HID_RPT_1}
;----------------------------------------------------------------------
USBFS_HID_RPT_1_IN_RPT_SIZE:  EQU    8           ; TODO: Optimize report size
;----------------------------------------------------------------------
USBFS_HID_RPT_1_OUT_RPT_SIZE:  EQU    0          ; No OUT Reports are defined.  Size set to 0.
;----------------------------------------------------------------------
USBFS_HID_RPT_1_FEATURE_RPT_SIZE:  EQU    8      ; TODO: Optimize report size
;----------------------------------------------------------------------
; HID Report Sizes (HID_RPT_2}
;----------------------------------------------------------------------
USBFS_HID_RPT_2_IN_RPT_SIZE:  EQU    8           ; TODO: Optimize report size
;----------------------------------------------------------------------
USBFS_HID_RPT_2_OUT_RPT_SIZE:  EQU    0          ; No OUT Reports are defined.  Size set to 0.
;----------------------------------------------------------------------
USBFS_HID_RPT_2_FEATURE_RPT_SIZE:  EQU    8      ; TODO: Optimize report size
;----------------------------------------------------------------------
; HID Report Sizes (HID_RPT_3}
;----------------------------------------------------------------------
USBFS_HID_RPT_3_IN_RPT_SIZE:  EQU    8           ; TODO: Optimize report size
;----------------------------------------------------------------------
USBFS_HID_RPT_3_OUT_RPT_SIZE:  EQU    0          ; No OUT Reports are defined.  Size set to 0.
;----------------------------------------------------------------------
USBFS_HID_RPT_3_FEATURE_RPT_SIZE:  EQU    8      ; TODO: Optimize report size
;----------------------------------------------------------------------
;----------------------------------------------------------------------
; USB String Descriptors
;
; This section contains the USB String Descriptors generated
; by the USB User Module Descriptor Generator
;
; Note:  The string labels are internally generated by the
; descriptor generator
;
; Descriptors that reference string descriptors, use a hashed
; symbol that is set in an EQU directive with each string
; descriptor.
;----------------------------------------------------------------------
STR_HASH_0:  EQU    0                            ; String Hash for the null string
AREA  lit     (ROM,REL,CON)
EXPORT USBFS_StringTable
.LITERAL
USBFS_StringTable:                               
  TD_START_TABLE 6                               ; Number of USB Strings
  TD_ENTRY       USB_DS_ROM, LANGID_DESCR_SIZE, LANGID_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_2_DESCR_SIZE, STRING_2_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_3_DESCR_SIZE, STRING_3_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_4_DESCR_SIZE, STRING_4_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_5_DESCR_SIZE, STRING_5_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_6_DESCR_SIZE, STRING_6_DESCR_START, NULL_PTR
;----------------------------------------------------------------------
; LANGID Descriptor
;----------------------------------------------------------------------
LANGID_DESCR_START:                              
  DB    ((1 * 2) + 2)                            ; bLength (N+2)
  DB    3                                        ; bDescriptorType (STRING)
  DWL   1033                                     ;
LANGID_DESCR_END:                                
LANGID_DESCR_SIZE:  EQU    (LANGID_DESCR_END - LANGID_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_2:  EQU    1                            ; String Hash
STRING_2_DESCR_START:                            
  DB    STRING_2_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "Julian Made It"                         ;
STRING_2_DESCR_END:                              
STRING_2_DESCR_SIZE:  EQU    (STRING_2_DESCR_END - STRING_2_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_3:  EQU    2                            ; String Hash
STRING_3_DESCR_START:                            
  DB    STRING_3_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "My Teletouch"                           ;
STRING_3_DESCR_END:                              
STRING_3_DESCR_SIZE:  EQU    (STRING_3_DESCR_END - STRING_3_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_4:  EQU    3                            ; String Hash
STRING_4_DESCR_START:                            
  DB    STRING_4_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "JMI Keyboard"                           ;
STRING_4_DESCR_END:                              
STRING_4_DESCR_SIZE:  EQU    (STRING_4_DESCR_END - STRING_4_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_5:  EQU    4                            ; String Hash
STRING_5_DESCR_START:                            
  DB    STRING_5_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "JMI Mouse"                              ;
STRING_5_DESCR_END:                              
STRING_5_DESCR_SIZE:  EQU    (STRING_5_DESCR_END - STRING_5_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_6:  EQU    5                            ; String Hash
STRING_6_DESCR_START:                            
  DB    STRING_6_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "JMI Gamepad"                            ;
STRING_6_DESCR_END:                              
STRING_6_DESCR_SIZE:  EQU    (STRING_6_DESCR_END - STRING_6_DESCR_START)
.ENDLITERAL

;-----------------------------------------------
; End of Descriptors
;-----------------------------------------------

ENDIF
   ;---------------------------------------------------
   ;@PSoC_UserCode_BODY_2@ (Do not change this line.)
   ;---------------------------------------------------
   ; Redefine your descriptor table below. You might
   ; cut and paste code from the WIZARD descriptor
   ; above and then make your changes.
   ;---------------------------------------------------

   
   ;---------------------------------------------------
   ; Insert your custom code above this banner
   ;---------------------------------------------------
   ;@PSoC_UserCode_END@ (Do not change this line.)
; End of File USBFS_descr.asm
