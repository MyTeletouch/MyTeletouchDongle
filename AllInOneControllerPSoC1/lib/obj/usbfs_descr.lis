                ;;*****************************************************************************
                ;;*****************************************************************************
                ;;  FILENAME: USBFS_descr.asm
                ;;   Version: 2.10, Updated on 2015/3/4 at 22:27:56
                ;;  Generated by PSoC Designer 5.4.3191
                ;;
                ;;  DESCRIPTION: USB User Module Descriptors
                ;;
                ;;  NOTE: User Module APIs conform to the fastcall convention for marshalling
                ;;        arguments and observe the associated "Registers are volatile" policy.
                ;;        This means it is the caller's responsibility to preserve any values
                ;;        in the X and A registers that are still needed after the API
                ;;        function returns. Even though these registers may be preserved now,
                ;;        there is no guarantee they will be preserved in future releases.
                ;;-----------------------------------------------------------------------------
                ;;  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
                ;;*****************************************************************************
                ;;*****************************************************************************
                
 00C0           FLAG_PGMODE_MASK:  equ 0C0h     ; Paging control for > 256 bytes of RAM
 0000           FLAG_PGMODE_0:     equ 00h       ; Direct to Page 0,      indexed to Page 0
 0040           FLAG_PGMODE_1:     equ 40h       ; Direct to Page 0,      indexed to STK_PP page
 0080           FLAG_PGMODE_2:     equ 80h       ; Direct to CUR_PP page, indexed to IDX_PP page
 00C0           FLAG_PGMODE_3:     equ 0C0h       ; Direct to CUR_PP page, indexed to STK_PP page
 0000           FLAG_PGMODE_00b:   equ 00h       ; Same as PGMODE_0
 0040           FLAG_PGMODE_01b:   equ 40h       ; Same as PGMODE_1
 0080           FLAG_PGMODE_10b:   equ 80h       ; Same as PGMODE_2
 00C0           FLAG_PGMODE_11b:   equ 0C0h       ; Same as PGMODE_3
 0010           FLAG_XIO_MASK:     equ 10h     ; I/O Bank select for register space
 0008           FLAG_SUPER:        equ 08h     ; Supervisor Mode
 0004           FLAG_CARRY:        equ 04h     ; Carry Condition Flag
 0002           FLAG_ZERO:         equ 02h     ; Zero  Condition Flag
 0001           FLAG_GLOBAL_IE:    equ 01h     ; Glogal Interrupt Enable
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 0
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DR:       equ 00h          ; Port 0 Data Register                     (RW)
 0001           PRT0IE:       equ 01h          ; Port 0 Interrupt Enable Register         (RW)
 0002           PRT0GS:       equ 02h          ; Port 0 Global Select Register            (RW)
 0003           PRT0DM2:      equ 03h          ; Port 0 Drive Mode 2                      (RW)
 0000           ; Port 1
 0004           PRT1DR:       equ 04h          ; Port 1 Data Register                     (RW)
 0005           PRT1IE:       equ 05h          ; Port 1 Interrupt Enable Register         (RW)
 0006           PRT1GS:       equ 06h          ; Port 1 Global Select Register            (RW)
 0007           PRT1DM2:      equ 07h          ; Port 1 Drive Mode 2                      (RW)
 0000           ; Port 2
 0008           PRT2DR:       equ 08h          ; Port 2 Data Register                     (RW)
 0009           PRT2IE:       equ 09h          ; Port 2 Interrupt Enable Register         (RW)
 000A           PRT2GS:       equ 0Ah          ; Port 2 Global Select Register            (RW)
 000B           PRT2DM2:      equ 0Bh          ; Port 2 Drive Mode 2                      (RW)
 0000           ; Port 3
 000C           PRT3DR:       equ 0Ch          ; Port 3 Data Register                     (RW)
 000D           PRT3IE:       equ 0Dh          ; Port 3 Interrupt Enable Register         (RW)
 000E           PRT3GS:       equ 0Eh          ; Port 3 Global Select Register            (RW)
 000F           PRT3DM2:      equ 0Fh          ; Port 3 Drive Mode 2                      (RW)
 0000           ; Port 4
 0010           PRT4DR:       equ 10h          ; Port 4 Data Register                     (RW)
 0011           PRT4IE:       equ 11h          ; Port 4 Interrupt Enable Register         (RW)
 0012           PRT4GS:       equ 12h          ; Port 4 Global Select Register            (RW)
 0013           PRT4DM2:      equ 13h          ; Port 4 Drive Mode 2                      (RW)
 0000           ; Port 5
 0014           PRT5DR:       equ 14h          ; Port 5 Data Register                     (RW)
 0015           PRT5IE:       equ 15h          ; Port 5 Interrupt Enable Register         (RW)
 0016           PRT5GS:       equ 16h          ; Port 5 Global Select Register            (RW)
 0017           PRT5DM2:      equ 17h          ; Port 5 Drive Mode 2                      (RW)
 0000           ; Port 7
 001C           PRT7DR:       equ 1Ch          ; Port 7 Data Register                     (RW)
 001D           PRT7IE:       equ 1Dh          ; Port 7 Interrupt Enable Register         (RW)
 001E           PRT7GS:       equ 1Eh          ; Port 7 Global Select Register            (RW)
 001F           PRT7DM2:      equ 1Fh          ; Port 7 Drive Mode 2                      (RW)
 0000           
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00DR0:     equ 20h          ; data register 0                          (#)
 0021           DBB00DR1:     equ 21h          ; data register 1                          (W)
 0022           DBB00DR2:     equ 22h          ; data register 2                          (RW)
 0023           DBB00CR0:     equ 23h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01DR0:     equ 24h          ; data register 0                          (#)
 0025           DBB01DR1:     equ 25h          ; data register 1                          (W)
 0026           DBB01DR2:     equ 26h          ; data register 2                          (RW)
 0027           DBB01CR0:     equ 27h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02DR0:     equ 28h          ; data register 0                          (#)
 0029           DCB02DR1:     equ 29h          ; data register 1                          (W)
 002A           DCB02DR2:     equ 2Ah          ; data register 2                          (RW)
 002B           DCB02CR0:     equ 2Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03DR0:     equ 2Ch          ; data register 0                          (#)
 002D           DCB03DR1:     equ 2Dh          ; data register 1                          (W)
 002E           DCB03DR2:     equ 2Eh          ; data register 2                          (RW)
 002F           DCB03CR0:     equ 2Fh          ; control & status register 0              (#)
 0000           
 0000           ;------------------------------------------------
 0000           ;  PMA Data Registers
 0000           ;------------------------------------------------
 0000           
 0040           PMA0_DR:   	  equ 40h		   ; PMA Data Register                        (RW)
 0041           PMA1_DR:   	  equ 41h		   ; PMA Data Register                        (RW)
 0042           PMA2_DR:   	  equ 42h		   ; PMA Data Register                        (RW)
 0043           PMA3_DR:   	  equ 43h		   ; PMA Data Register                        (RW)
 0044           PMA4_DR:   	  equ 44h		   ; PMA Data Register                        (RW)
 0045           PMA5_DR:   	  equ 45h		   ; PMA Data Register                        (RW)
 0046           PMA6_DR:   	  equ 46h		   ; PMA Data Register                        (RW)
 0047           PMA7_DR:   	  equ 47h		   ; PMA Data Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  USB Registers
 0000           ;------------------------------------------------
 0000           
 0048           USB_SOF0:     equ 48h		   ; SOF Frame Number LSB(7:0)                (R)
 0049           USB_SOF1:     equ 49h		   ; SOF Frame Number MSB(10:8)               (R)
 0000           
 004A           USB_CR0:      equ 4Ah		   ; USB Control Register 0                   (RW)
 0080           USB_CR0_ENABLE:       equ 80h    ; MASK: enable/disable USB SIE	          (RW)
 007F           USB_CR0_DEVICE_ADDR:  equ 7Fh    ; MASK: USB Device Address               (RW)
 0000           
 004B           USBIO_CR0:    equ 4Bh		   ; USB IO Control Register 0                (#)
 0080           USBIO_CR0_TEN:        equ 80h    ; MASK: enable/disable manual tx on D+ D-(RW)
 0040           USBIO_CR0_TSE0:       equ 40h    ; MASK: transmit a single ended 0        (RW)
 0020           USBIO_CR0_TD:         equ 20h    ; MASK: transmit J or K state on Bus     (RW)
 0001           USBIO_CR0_RD:         equ 01h    ; MASK: read state of differential rx    (R)
 0000           
 004C           USBIO_CR1:    equ 4Ch		   ; USB IO Control Register 0                (#)
 0080           USBIO_CR1_IOMODE:     equ 80h    ; MASK: select Bit Bang Mode/USB Mode    (RW)
 0040           USBIO_CR1_DRIVE_MODE: equ 40h    ; MASK: select CMOS mode/Open Drain mode (RW)
 0020           USBIO_CR1_DPI:        equ 20h    ; MASK: drive D+ high/low                (RW)
 0010           USBIO_CR1_DMI:        equ 10h    ; MASK: drive D- high/low                (RW)
 0008           USBIO_CR1_PS2PUEN:    equ 08h    ; MASK: enable/disable 5K Pullup on D+/D-(RW)
 0004           USBIO_CR1_USBPUEN:    equ 04h    ; MASK: enable/disable USB Pullup on D+  (RW)
 0002           USBIO_CR1_DPO:        equ 02h    ; MASK: read D+ pin                      (R)
 0001           USBIO_CR1_DMO:        equ 01h    ; MASK: read D- pin                      (R)
 0000           
 0000           
 0000           ;------------------------------------------------
 0000           ;  USB Endpoint Registers
 0000           ;------------------------------------------------
 0000           
 004E           EP1_CNT1:     equ 4Eh		   ; Endpoint 1 Count Register 1              (#)
 0080           EP1_CNT1_DATA_TOGGLE: equ 80h    ; MASK: select data toggle 1/0           (RW)
 0040           EP1_CNT1_DATA_VALID:  equ 40h    ; MASK: read error status on rx data     (R)
 0001           EP1_CNT1_CNT_MSB:     equ 01h    ; MASK: MSB of 9-bit count value         (RW)
 0000           
 004F           EP1_CNT:      equ 4Fh		   ; Endpoint 1 Count Register 0              (RW)
 0000           
 0050           EP2_CNT1:     equ 50h		   ; Endpoint 2 Count Register 1              (#)
 0080           EP2_CNT1_DATA_TOGGLE: equ 80h    ; MASK: select data toggle 1/0           (RW)
 0040           EP2_CNT1_DATA_VALID:  equ 40h    ; MASK: read error status on rx data     (R)
 0001           EP2_CNT1_CNT_MSB:     equ 01h    ; MASK: MSB of 9-bit count value         (RW)
 0000           
 0051           EP2_CNT:      equ 51h		   ; Endpoint 2 Count Register 0              (RW)
 0000           
 0052           EP3_CNT1:     equ 52h		   ; Endpoint 3 Count Register 1              (#)
 0080           EP3_CNT1_DATA_TOGGLE: equ 80h    ; MASK: select data toggle 1/0           (RW)
 0040           EP3_CNT1_DATA_VALID:  equ 40h    ; MASK: read error status on rx data     (R)
 0001           EP3_CNT1_CNT_MSB:     equ 01h    ; MASK: MSB of 9-bit count value         (RW)
 0000           
 0053           EP3_CNT:      equ 53h		   ; Endpoint 3 Count Register 0              (RW)
 0000           
 0054           EP4_CNT1:     equ 54h		   ; Endpoint 4 Count Register 1              (#)
 0080           EP4_CNT1_DATA_TOGGLE: equ 80h    ; MASK: select data toggle 1/0           (RW)
 0040           EP4_CNT1_DATA_VALID:  equ 40h    ; MASK: read error status on rx data     (R)
 0001           EP4_CNT1_CNT_MSB:     equ 01h    ; MASK: MSB of 9-bit count value         (RW)
 0000           
 0055           EP4_CNT:      equ 55h		   ; Endpoint 4 Count Register 0              (RW)
 0000           
 0056           EP0_CR:      equ 56h          ; Endpoint 0 Control Register 0            (#)
 0080           EP0_CR_SETUP_RCVD:   equ 80h    ; MASK: Setup received                   (RC)
 0040           EP0_CR_IN_RCVD:      equ 40h    ; MASK: IN received                      (RC)
 0020           EP0_CR_OUT_RCVD:     equ 20h    ; MASK: OUT received                     (RC)
 0010           EP0_CR_ACKD:         equ 10h    ; MASK: Acked transaction                (RC)
 000F           EP0_CR_MODE:         equ 0Fh    ; MASK: Mode response for endpoint       (RW)
 0000           
 0000           ; ------------------------------------------------------------------------------
 0000           ; The following defines are depricated.  Left here for compatibility. 
 0056           EP0_CR0:      equ 56h          ; Endpoint 0 Control Register 0            (#)
 0080           EP0_CR0_SETUP_RCVD:   equ 80h    ; MASK: Setup received                   (RC)
 0040           EP0_CR0_IN_RCVD:      equ 40h    ; MASK: IN received                      (RC)
 0020           EP0_CR0_OUT_RCVD:     equ 20h    ; MASK: OUT received                     (RC)
 0010           EP0_CR0_ACKD:         equ 10h    ; MASK: Acked transaction                (RC)
 000F           EP0_CR0_MODE:         equ 0Fh    ; MASK: Mode response for endpoint       (RW)
 0000           ; ------------------------------------------------------------------------------
 0000           
 0057           EP0_CNT:      equ 57h          ; Endpoint 0 Count Register                (#)
 0080           EP0_CNT_DATA_TOGGLE: equ 80h    ; MASK: select data toggle 1/0           (RW)
 0040           EP0_CNT_DATA_VALID:  equ 40h    ; MASK: read error status on rx data     (RC)
 000F           EP0_CNT_BYTE_CNT:    equ 0Fh    ; MASK: MSB of 9-bit count value         (RW)
 0000           
 0058           EP0_DR0:      equ 58h          ; Endpoint 0 Data Register 0               (RW)
 0059           EP0_DR1:      equ 59h          ; Endpoint 0 Data Register 1               (RW)
 005A           EP0_DR2:      equ 5Ah          ; Endpoint 0 Data Register 2               (RW)
 005B           EP0_DR3:      equ 5Bh          ; Endpoint 0 Data Register 3               (RW)
 005C           EP0_DR4:      equ 5Ch          ; Endpoint 0 Data Register 4               (RW)
 005D           EP0_DR5:      equ 5Dh          ; Endpoint 0 Data Register 5               (RW)
 005E           EP0_DR6:      equ 5Eh          ; Endpoint 0 Data Register 6               (RW)
 005F           EP0_DR7:      equ 5Fh          ; Endpoint 0 Data Register 7               (RW)
 0000           
 0000           ;-------------------------------------
 0000           ;  Analog Control Registers
 0000           ;-------------------------------------
 0060           AMX_IN:       equ 60h          ; Analog Input Multiplexor Control         (RW)
 000C           AMX_IN_ACI1:          equ 0Ch    ; MASK: column 1 input mux
 0003           AMX_IN_ACI0:          equ 03h    ; MASK: column 0 input mux
 0000           
 0061           AMUX_CFG:      equ 61h          ; Analog Mux Bus Configuration Register    (RW)
 0080           AMUX_CFG_BCOL0_MUX:    equ 80h    ; MASK: select AMuxBusB for Col1 input   (RW)
 0040           AMUX_CFG_ACOL0_MUX:    equ 40h    ; MASK: select AMuxBusA for Col0 input   (RW)  
 0030           AMUX_CFG_INTCAP:       equ 30h    ; MASK: select pins for static operation (RW)
 000E           AMUX_CFG_MUXCLK:       equ 0Eh    ; MASK: select precharge clock source    (RW)
 0001           AMUX_CFG_EN:           equ 01h    ; MASK: enable/disable MUXCLK            (RW)
 0000           ;; Keep Old Left. here for compatibility.
 0061           AMUXCFG:      equ 61h          ; Analog Mux Bus Configuration Register    (RW)
 0080           AMUXCFG_BCOL0_MUX:    equ 80h    ; MASK: select AMuxBusB for Col1 input   (RW)
 0040           AMUXCFG_ACOL0_MUX:    equ 40h    ; MASK: select AMuxBusA for Col0 input   (RW)  
 0030           AMUXCFG_INTCAP:       equ 30h    ; MASK: select pins for static operation (RW)
 000E           AMUXCFG_MUXCLK:       equ 0Eh    ; MASK: select precharge clock source    (RW)
 0001           AMUXCFG_EN:           equ 01h    ; MASK: enable/disable MUXCLK            (RW)
 0000           
 0063           ARF_CR:       equ 63h          ; Analog Reference Control Register        (RW)
 0040           ARF_CR_HBE:           equ 40h    ; MASK: Bias level control
 0038           ARF_CR_REF:           equ 38h    ; MASK: Analog Reference controls
 0007           ARF_CR_REFPWR:        equ 07h    ; MASK: Analog Reference power
 0003           ARF_CR_SCPWR:         equ 03h    ; MASK: Switched Cap block power
 0000           
 0064           CMP_CR0:      equ 64h          ; Analog Comparator Bus 0 Register         (#)
 0020           CMP_CR0_COMP1:        equ 20h    ; MASK: Column 1 comparator state        (R)
 0010           CMP_CR0_COMP0:        equ 10h    ; MASK: Column 0 comparator state        (R)
 0002           CMP_CR0_AINT1:        equ 02h    ; MASK: Column 1 interrupt source        (RW)
 0001           CMP_CR0_AINT0:        equ 01h    ; MASK: Column 0 interrupt source        (RW)
 0000           
 0065           ASY_CR:       equ 65h          ; Analog Synchronizaton Control            (#)
 0070           ASY_CR_SARCOUNT:      equ 70h    ; MASK: SAR support: resolution count    (W)
 0008           ASY_CR_SARSIGN:       equ 08h    ; MASK: SAR support: sign                (RW)
 0006           ASY_CR_SARCOL:        equ 06h    ; MASK: SAR support: column spec         (RW)
 0001           ASY_CR_SYNCEN:        equ 01h    ; MASK: Stall bit                        (RW)
 0000           
 0066           CMP_CR1:      equ 66h          ; Analog Comparator Bus 1 Register         (RW)
 0020           CMP_CR1_CLDIS1:       equ 20h    ; MASK: Column 1 comparator bus synch
 0010           CMP_CR1_CLDIS0:       equ 10h    ; MASK: Column 0 comparator bus synch
 0002           CMP_CR1_CLDIX1:       equ 02h    ; MASK: Column 1 comparator bus synch
 0001           CMP_CR1_CLDIX0:       equ 01h    ; MASK: Column 0 comparator bus synch
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Global General Purpose Data Registers
 0000           ;-----------------------------------------------
 006C           TMP_DR0:      equ 6Ch          ; Temporary Data Register 0                (RW)
 006D           TMP_DR1:      equ 6Dh          ; Temporary Data Register 1                (RW)
 006E           TMP_DR2:      equ 6Eh          ; Temporary Data Register 2                (RW)
 006F           TMP_DR3:      equ 6Fh          ; Temporary Data Register 3                (RW)
 0000           
 0000           ;---------------------------------------------------
 0000           ;  Analog PSoC block Registers
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;---------------------------------------------------
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 0
 0070           ACB00CR3:     equ 70h          ; Control register 3                       (RW)
 0071           ACB00CR0:     equ 71h          ; Control register 0                       (RW)
 0072           ACB00CR1:     equ 72h          ; Control register 1                       (RW)
 0073           ACB00CR2:     equ 73h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 1
 0074           ACB01CR3:     equ 74h          ; Control register 3                       (RW)
 0075           ACB01CR0:     equ 75h          ; Control register 0                       (RW)
 0076           ACB01CR1:     equ 76h          ; Control register 1                       (RW)
 0077           ACB01CR2:     equ 77h          ; Control register 2                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 0
 0080           ASC10CR0:     equ 80h          ; Control register 0                       (RW)
 0081           ASC10CR1:     equ 81h          ; Control register 1                       (RW)
 0082           ASC10CR2:     equ 82h          ; Control register 2                       (RW)
 0083           ASC10CR3:     equ 83h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 1
 0084           ASD11CR0:     equ 84h          ; Control register 0                       (RW)
 0085           ASD11CR1:     equ 85h          ; Control register 1                       (RW)
 0086           ASD11CR2:     equ 86h          ; Control register 2                       (RW)
 0087           ASD11CR3:     equ 87h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 0
 0090           ASD20CR0:     equ 90h          ; Control register 0                       (RW)
 0091           ASD20CR1:     equ 91h          ; Control register 1                       (RW)
 0092           ASD20CR2:     equ 92h          ; Control register 2                       (RW)
 0093           ASD20CR3:     equ 93h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 1
 0094           ASC21CR0:     equ 94h          ; Control register 0                       (RW)
 0095           ASC21CR1:     equ 95h          ; Control register 1                       (RW)
 0096           ASC21CR2:     equ 96h          ; Control register 2                       (RW)
 0097           ASC21CR3:     equ 97h          ; Control register 3                       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Row Digital Interconnects
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;------------------------------------------------
 0000           
 00B0           RDI0RI:       equ 0B0h          ; Row Digital Interconnect Row 0 Input Reg (RW)
 00B1           RDI0SYN:      equ 0B1h          ; Row Digital Interconnect Row 0 Sync Reg  (RW)
 00B2           RDI0IS:       equ 0B2h          ; Row 0 Input Select Register              (RW)
 00B3           RDI0LT0:      equ 0B3h          ; Row 0 Look Up Table Register 0           (RW)
 00B4           RDI0LT1:      equ 0B4h          ; Row 0 Look Up Table Register 1           (RW)
 00B5           RDI0RO0:      equ 0B5h          ; Row 0 Output Register 0                  (RW)
 00B6           RDI0RO1:      equ 0B6h          ; Row 0 Output Register 1                  (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Ram Page Pointers
 0000           ;-----------------------------------------------
 00D0           CUR_PP:      equ 0D0h           ; Current   Page Pointer
 00D1           STK_PP:      equ 0D1h           ; Stack     Page Pointer
 00D3           IDX_PP:      equ 0D3h           ; Index     Page Pointer
 00D4           MVR_PP:      equ 0D4h           ; MVI Read  Page Pointer
 00D5           MVW_PP:      equ 0D5h           ; MVI Write Page Pointer
 0000           
 0000           ;------------------------------------------------
 0000           ;  I2C Configuration Registers
 0000           ;------------------------------------------------
 00D6           I2C_CFG:      equ 0D6h          ; I2C Configuration Register               (RW)
 0040           I2C_CFG_PINSEL:         equ 40h  ; MASK: Select P1[0] and P1[1] for I2C
 0020           I2C_CFG_BUSERR_IE:      equ 20h  ; MASK: Enable interrupt on Bus Error
 0010           I2C_CFG_STOP_IE:        equ 10h  ; MASK: Enable interrupt on Stop
 0000           I2C_CFG_CLK_RATE_100K:  equ 00h  ; MASK: I2C clock set at 100K
 0004           I2C_CFG_CLK_RATE_400K:  equ 04h  ; MASK: I2C clock set at 400K
 0008           I2C_CFG_CLK_RATE_50K:   equ 08h  ; MASK: I2C clock set at 50K
 000C           I2C_CFG_CLK_RATE_1M6:   equ 0Ch  ; MASK: I2C clock set at 1.6M
 000C           I2C_CFG_CLK_RATE:       equ 0Ch  ; MASK: I2C clock rate setting mask
 0002           I2C_CFG_PSELECT_MASTER: equ 02h  ; MASK: Enable I2C Master
 0001           I2C_CFG_PSELECT_SLAVE:  equ 01h  ; MASK: Enable I2C Slave
 0000           
 00D7           I2C_SCR:      equ 0D7h          ; I2C Status and Control Register          (#)
 0080           I2C_SCR_BUSERR:        equ 80h   ; MASK: I2C Bus Error detected           (RC)
 0040           I2C_SCR_LOSTARB:       equ 40h   ; MASK: I2C Arbitration lost             (RC)
 0020           I2C_SCR_STOP:          equ 20h   ; MASK: I2C Stop detected                (RC)
 0010           I2C_SCR_ACK:           equ 10h   ; MASK: ACK the last byte                (RW)
 0008           I2C_SCR_ADDR:          equ 08h   ; MASK: Address rcv'd is Slave address   (RC)
 0004           I2C_SCR_XMIT:          equ 04h   ; MASK: Set transfer to tranmit mode     (RW)
 0002           I2C_SCR_LRB:           equ 02h   ; MASK: Last recieved bit                (RC)
 0001           I2C_SCR_BYTECOMPLETE:  equ 01h   ; MASK: Transfer of byte complete        (RC)
 0000           
 00D8           I2C_DR:       equ 0D8h          ; I2C Data Register                        (RW)
 0000           
 00D9           I2C_MSCR:     equ 0D9h          ; I2C Master Status and Control Register   (#)
 0008           I2C_MSCR_BUSY:         equ 08h   ; MASK: I2C Busy (Start detected)        (R)
 0004           I2C_MSCR_MODE:         equ 04h   ; MASK: Start has been generated         (R)
 0002           I2C_MSCR_RESTART:      equ 02h   ; MASK: Generate a Restart condition     (RW)
 0001           I2C_MSCR_START:        equ 01h   ; MASK: Generate a Start condition       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;------------------------------------------------
 00DA           INT_CLR0:     equ 0DAh          ; Interrupt Clear Register 0               (RW)
 0000                                          ; Use INT_MSK0 bit field masks
 00DB           INT_CLR1:     equ 0DBh          ; Interrupt Clear Register 1               (RW)
 0000                                          ; Use INT_MSK1 bit field masks
 00DC           INT_CLR2:     equ 0DCh          ; Interrupt Clear Register 2               (RW)
 0000                                          ; Use INT_MSK2 bit field masks
 00DD           INT_CLR3:     equ 0DDh          ; Interrupt Clear Register 3               (RW)
 0000                                          ; Use INT_MSK3 bit field masks
 0000           
 00DE           INT_MSK3:     equ 0DEh          ; I2C and Software Mask Register           (RW)
 0080           INT_MSK3_ENSWINT:          equ 80h ; MASK: enable/disable SW interrupt
 0001           INT_MSK3_I2C:              equ 01h ; MASK: enable/disable I2C interrupt
 0000           
 00DF           INT_MSK2:     equ 0DFh          ; USB Mask Register           (RW)
 0080           INT_MSK2_WAKEUP:           equ 80h ; MASK: enable/disable I2C interrupt
 0040           INT_MSK2_EP4:              equ 40h ; MASK: enable/disable SW interrupt
 0020           INT_MSK2_EP3:              equ 20h ; MASK: enable/disable I2C interrupt
 0010           INT_MSK2_EP2:              equ 10h ; MASK: enable/disable SW interrupt
 0008           INT_MSK2_EP1:              equ 08h ; MASK: enable/disable I2C interrupt
 0004           INT_MSK2_EP0:              equ 04h ; MASK: enable/disable SW interrupt
 0002           INT_MSK2_SOF:              equ 02h ; MASK: enable/disable I2C interrupt
 0001           INT_MSK2_BUS_RESET:        equ 01h ; MASK: enable/disable SW interrupt
 0000           
 00E0           INT_MSK0:     equ 0E0h          ; General Interrupt Mask Register          (RW)
 0080           INT_MSK0_VC3:              equ 80h ; MASK: enable/disable VC3 interrupt
 0040           INT_MSK0_SLEEP:            equ 40h ; MASK: enable/disable sleep interrupt
 0020           INT_MSK0_GPIO:             equ 20h ; MASK: enable/disable GPIO  interrupt
 0004           INT_MSK0_ACOLUMN_1:        equ 04h ; MASK: enable/disable Analog col 1 interrupt
 0002           INT_MSK0_ACOLUMN_0:        equ 02h ; MASK: enable/disable Analog col 0 interrupt
 0001           INT_MSK0_VOLTAGE_MONITOR:  equ 01h ; MASK: enable/disable Volts interrupt
 0000           
 00E1           INT_MSK1:     equ 0E1h          ; Digital PSoC block Mask Register         (RW)
 0008           INT_MSK1_DCB03:            equ 08h ; MASK: enable/disable DCB03 block interrupt
 0004           INT_MSK1_DCB02:            equ 04h ; MASK: enable/disable DCB02 block interrupt
 0002           INT_MSK1_DBB01:            equ 02h ; MASK: enable/disable DBB01 block interrupt
 0001           INT_MSK1_DBB00:            equ 01h ; MASK: enable/disable DBB00 block interrupt
 0000           
 00E2           INT_VC:       equ 0E2h          ; Interrupt vector register                (RC)
 00E3           RES_WDT:      equ 0E3h          ; Watch Dog Timer Register                 (W)
 0000           
 0000           ; DECIMATOR Control Registers
 00E4           DEC_DH:       equ 0E4h          ; Data High Register                       (RW)
 00E5           DEC_DL:       equ 0E5h          ; Data Low Register                        (RW)
 00E6           DEC_CR0:      equ 0E6h          ; Data Control Register 0                  (RW)
 00E7           DEC_CR1:      equ 0E7h          ; Data Control Register 1                  (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  MAC Registers for compatibility only
 0000           ;------------------------------------------------------
 0000           
 00E8           MUL_X:        equ 0E8h          ; Multiply Input X Register                (W)
 00E9           MUL_Y:        equ 0E9h          ; Multiply Input Y Register                (W)
 00EA           MUL_DH:       equ 0EAh          ; Multiply Result High Byte Register       (R)
 00EA           MUL_RESULT:   equ 0EAh          ; Multiply Result High Byte Register       (R)
 00EB           MUL_DL:       equ 0EBh          ; Multiply Result Low Byte Register        (R)
 0000           
 00EC           ACC_DR1:      equ 0ECh          ; Accumulator Data Register 1              (RW)
 00EC           MAC_X:        equ ACC_DR1       ; Accumulator Data Register 1              (RW)
 00EC           ACC_LOW_WORD: equ ACC_DR1       ; Accumulator Data Register 1              (RW)
 00ED           ACC_DR0:      equ 0EDh          ; Accumulator Data Register 0              (RW)
 00ED           MAC_Y:        equ ACC_DR0       ; Accumulator Data Register 0              (RW)
 00EE           ACC_DR3:      equ 0EEh          ; Accumulator Data Register 3              (RW)
 00EE           MAC_CL0:      equ ACC_DR3       ; Accumulator Data Register 3              (RW)
 00EE           ACC_HI_WORD:  equ ACC_DR3       ; Accumulator Data Register 3              (RW)
 00EF           ACC_DR2:      equ 0EFh          ; Accumulator Data Register 2              (RW)
 00EF           MAC_CL1:      equ ACC_DR2       ; Accumulator Data Register 2              (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  MAC Registers
 0000           ;------------------------------------------------------
 0000           
 0000           // Multiply/Accumulate Unit 0
 00E8           MUL0_X:       equ 0E8h          ; Multiplier 0 X Register (write)          (W)
 00E9           MUL0_Y:       equ 0E9h          ; Multiplier 0 Y Register (write)          (W)
 00EA           MUL0_DH:      equ 0EAh          ; Multiplier 0 Result Data (high byte read)(R)
 00EB           MUL0_DL:      equ 0EBh          ; Multiplier 0 Result Data ( low byte read)(R)
 00EC           MAC0_X:       equ 0ECh          ; write = MAC 0 X register [also see ACC_DR1]
 00EC           ACC0_DR1:     equ MAC0_X       ; read =  MAC 0 Accumulator, byte 1        (RW)
 00ED           MAC0_Y:       equ 0EDh          ; write = MAC 0 Y register [also see ACC_DR0]
 00ED           ACC0_DR0:     equ MAC0_Y       ; read =  MAC 0 Accumulator, byte 0        (RW)
 00EE           MAC0_CL0:     equ 0EEh          ; write = MAC 0 Clear Accum [also see ACC_DR3]
 00EE           ACC0_DR3:     equ MAC0_CL0     ; read =  MAC 0 Accumulator, byte 3        (RW)
 00EF           MAC0_CL1:     equ 0EFh          ; write = MAC 0 Clear Accum [also see ACC_DR2]
 00EF           ACC0_DR2:     equ MAC0_CL1     ; read =  MAC 0 Accumulator, byte 2        (RW)
 0000           
 0000           // Multiply/Accumulate Unit 1
 00A8           MUL1_X:       equ 0A8h          ; Multiplier 1 X Register (write)          (W)
 00A9           MUL1_Y:       equ 0A9h          ; Multiplier 1 Y Register (write)          (W)
 00AA           MUL1_DH:      equ 0AAh          ; Multiplier 1 Result Data (high byte read)(R)
 00AA           MUL1_RESULT:  equ MUL1_DH       ; Multiplier 1 Result Data (high byte read)(R)
 00AB           MUL1_DL:      equ 0ABh          ; Multiplier 1 Result Data ( low byte read)(R)
 00AC           MAC1_X:       equ 0ACh          ; write = MAC 1 X register [also see ACC_DR1]
 00AC           ACC1_LOW_WORD: equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1       (RW)
 00AC           ACC1_DR1:     equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1        (RW)
 00AD           MAC1_Y:       equ 0ADh          ; write = MAC 1 Y register [also see ACC_DR0]
 00AD           ACC1_DR0:     equ MAC1_Y       ; read =  MAC 1 Accumulator, byte 0        (RW)
 00AE           MAC1_CL0:     equ 0AEh          ; write = MAC 1 Clear Accum [also see ACC_DR3]
 00AE           ACC1_DR3:     equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AE           ACC1_HI_WORD: equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AF           MAC1_CL1:     equ 0AFh          ; write = MAC 1 Clear Accum [also see ACC_DR2]
 00AF           ACC1_DR2:     equ MAC1_CL1     ; read =  MAC 1 Accumulator, byte 2        (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  System Status and Control Registers
 0000           ;
 0000           ;  Note: The following registers are mapped into both
 0000           ;        register bank 0 AND register bank 1.
 0000           ;------------------------------------------------------
 00F7           CPU_F:        equ 0F7h          ; CPU Flag Register Access                 (RO)
 0000                                              ; Use FLAG_ masks defined at top of file
 0000           
 00FD           DAC_D:        equ 0FDh		   ; DAC Data Register                        (RW)
 0000           
 00FE           CPU_SCR1:     equ 0FEh          ; CPU Status and Control Register #1       (#)
 0080           CPU_SCR1_IRESS:         equ 80h    ; MASK: flag, Internal Reset Status bit
 0010           CPU_SCR1_SLIMO:         equ 10h	   ; MASK: Slow IMO (internal main osc) enable
 0008           CPU_SCR1_ECO_ALWD_WR:   equ 08h    ; MASK: flag, ECO allowed has been written
 0004           CPU_SCR1_ECO_ALLOWED:   equ 04h    ; MASK: ECO allowed to be enabled
 0001           CPU_SCR1_IRAMDIS:       equ 01h    ; MASK: Disable RAM initialization on WDR
 0000           
 00FF           CPU_SCR0:     equ 0FFh          ; CPU Status and Control Register #2       (#)
 0080           CPU_SCR0_GIE_MASK:      equ 80h    ; MASK: Global Interrupt Enable shadow
 0020           CPU_SCR0_WDRS_MASK:     equ 20h    ; MASK: Watch Dog Timer Reset
 0010           CPU_SCR0_PORS_MASK:     equ 10h    ; MASK: power-on reset bit PORS
 0008           CPU_SCR0_SLEEP_MASK:    equ 08h    ; MASK: Enable Sleep
 0001           CPU_SCR0_STOP_MASK:     equ 01h    ; MASK: Halt CPU bit
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 1
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DM0:      equ 00h          ; Port 0 Drive Mode 0                      (RW)
 0001           PRT0DM1:      equ 01h          ; Port 0 Drive Mode 1                      (RW)
 0002           PRT0IC0:      equ 02h          ; Port 0 Interrupt Control 0               (RW)
 0003           PRT0IC1:      equ 03h          ; Port 0 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 1
 0004           PRT1DM0:      equ 04h          ; Port 1 Drive Mode 0                      (RW)
 0005           PRT1DM1:      equ 05h          ; Port 1 Drive Mode 1                      (RW)
 0006           PRT1IC0:      equ 06h          ; Port 1 Interrupt Control 0               (RW)
 0007           PRT1IC1:      equ 07h          ; Port 1 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 2
 0008           PRT2DM0:      equ 08h          ; Port 2 Drive Mode 0                      (RW)
 0009           PRT2DM1:      equ 09h          ; Port 2 Drive Mode 1                      (RW)
 000A           PRT2IC0:      equ 0Ah          ; Port 2 Interrupt Control 0               (RW)
 000B           PRT2IC1:      equ 0Bh          ; Port 2 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 3
 000C           PRT3DM0:      equ 0Ch          ; Port 3 Drive Mode 0                      (RW)
 000D           PRT3DM1:      equ 0Dh          ; Port 3 Drive Mode 1                      (RW)
 000E           PRT3IC0:      equ 0Eh          ; Port 3 Interrupt Control 0               (RW)
 000F           PRT3IC1:      equ 0Fh          ; Port 3 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 4
 0010           PRT4DM0:      equ 10h          ; Port 4 Drive Mode 0                      (RW)
 0011           PRT4DM1:      equ 11h          ; Port 4 Drive Mode 1                      (RW)
 0012           PRT4IC0:      equ 12h          ; Port 4 Interrupt Control 0               (RW)
 0013           PRT4IC1:      equ 13h          ; Port 4 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 5
 0014           PRT5DM0:      equ 14h          ; Port 5 Drive Mode 0                      (RW)
 0015           PRT5DM1:      equ 15h          ; Port 5 Drive Mode 1                      (RW)
 0016           PRT5IC0:      equ 16h          ; Port 5 Interrupt Control 0               (RW)
 0017           PRT5IC1:      equ 17h          ; Port 5 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 7
 001C           PRT7DM0:      equ 1Ch          ; Port 7 Drive Mode 0                      (RW)
 001D           PRT7DM1:      equ 1Dh          ; Port 7 Drive Mode 1                      (RW)
 001E           PRT7IC0:      equ 1Eh          ; Port 7 Interrupt Control 0               (RW)
 001F           PRT7IC1:      equ 1Fh          ; Port 7 Interrupt Control 1               (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00FN:      equ 20h          ; Function Register                        (RW)
 0021           DBB00IN:      equ 21h          ;    Input Register                        (RW)
 0022           DBB00OU:      equ 22h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01FN:      equ 24h          ; Function Register                        (RW)
 0025           DBB01IN:      equ 25h          ;    Input Register                        (RW)
 0026           DBB01OU:      equ 26h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02FN:      equ 28h          ; Function Register                        (RW)
 0029           DCB02IN:      equ 29h          ;    Input Register                        (RW)
 002A           DCB02OU:      equ 2Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03FN:      equ 2Ch          ; Function Register                        (RW)
 002D           DCB03IN:      equ 2Dh          ;    Input Register                        (RW)
 002E           DCB03OU:      equ 2Eh          ;   Output Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  PMA Write and Read Registers
 0000           ;------------------------------------------------
 0000           
 0040           PMA0_WA:   	  equ 40h		   ; PMA Write Pointer Register               (RW)
 0041           PMA1_WA:   	  equ 41h		   ; PMA Write Pointer Register               (RW)
 0042           PMA2_WA:   	  equ 42h		   ; PMA Write Pointer Register               (RW)
 0043           PMA3_WA:   	  equ 43h		   ; PMA Write Pointer Register               (RW)
 0044           PMA4_WA:   	  equ 44h		   ; PMA Write Pointer Register               (RW)
 0045           PMA5_WA:   	  equ 45h		   ; PMA Write Pointer Register               (RW)
 0046           PMA6_WA:   	  equ 46h		   ; PMA Write Pointer Register               (RW)
 0047           PMA7_WA:   	  equ 47h		   ; PMA Write Pointer Register               (RW)
 0000           
 0050           PMA0_RA:   	  equ 50h		   ;  PMA Read Pointer Register               (RW)
 0051           PMA1_RA:   	  equ 51h		   ;  PMA Read Pointer Register               (RW)
 0052           PMA2_RA:   	  equ 52h		   ;  PMA Read Pointer Register               (RW)
 0053           PMA3_RA:   	  equ 53h		   ;  PMA Read Pointer Register               (RW)
 0054           PMA4_RA:   	  equ 54h		   ;  PMA Read Pointer Register               (RW)
 0055           PMA5_RA:   	  equ 55h		   ;  PMA Read Pointer Register               (RW)
 0056           PMA6_RA:   	  equ 56h		   ;  PMA Read Pointer Register               (RW)
 0057           PMA7_RA:   	  equ 57h		   ;  PMA Read Pointer Register               (RW)
 0000           
 0000           
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0060           CLK_CR0:      equ 60h          ; Analog Column Clock Select Register 0    (RW)
 000C           CLK_CR0_ACOLUMN_1:    equ 0Ch    ; MASK: Specify clock for analog cloumn
 0003           CLK_CR0_ACOLUMN_0:    equ 03h    ; MASK: Specify clock for analog cloumn
 0000           
 0061           CLK_CR1:      equ 61h          ; Analog Clock Source Select Register 1    (RW)
 0040           CLK_CR1_SHDIS:        equ 40h    ; MASK: Sample and Hold Disable (all Columns)
 0038           CLK_CR1_ACLK1:        equ 38h    ; MASK: Digital PSoC block for analog source
 0007           CLK_CR1_ACLK2:        equ 07h    ; MASK: Digital PSoC block for analog source
 0000           
 0062           ABF_CR0:      equ 62h          ; Analog Output Buffer Control Register 0  (RW)
 0080           ABF_CR0_ACOL1MUX:     equ 80h    ; MASK: Analog Column 1 Mux control
 0020           ABF_CR0_ABUF1EN:      equ 20h    ; MASK: Enable ACol 1 analog buffer (P0[5])
 0008           ABF_CR0_ABUF0EN:      equ 08h    ; MASK: Enable ACol 0 analog buffer (P0[3])
 0002           ABF_CR0_BYPASS:       equ 02h    ; MASK: Bypass the analog buffers
 0001           ABF_CR0_PWR:          equ 01h    ; MASK: High power mode on all analog buffers
 0000           
 0063           AMD_CR0:      equ 63h          ; Analog Modulator Control Register 0      (RW)
 0007           AMD_CR0_AMOD0:        equ 07h    ; MASK: Modulation source for analog column 1
 0000           
 0064           CMP_GO_EN:    equ 64h          ; Comparator Bus 0/1 To Global Out Enable  (RW)
 0080           CMP_GO_EN_GOO5:       equ 80h    ; MASK: Selected Col 1 signal to GOO5
 0040           CMP_GO_EN_GOO1:       equ 40h    ; MASK: Selected Col 1 signal to GOO1
 0030           CMP_GO_EN_SEL1:       equ 30h    ; MASK: Column 1 Signal Select
 0008           CMP_GO_EN_GOO4:       equ 08h    ; MASK: Selected Col 0 signal to GOO4
 0004           CMP_GO_EN_GOO0:       equ 04h    ; MASK: Selected Col 0 signal to GOO0
 0003           CMP_GO_EN_SEL0:       equ 03h    ; MASK: Column 0 Signal Select
 0000           
 0065           CMP_GO_EN1:   equ 65h          ; Comparator Bus 2/3 To Global Out Enable  (RW)
 0080           CMP_GO_EN1_GOO7:      equ 80h    ; MASK: Selected Col 3 signal to GOO5
 0040           CMP_GO_EN1_GOO3:      equ 40h    ; MASK: Selected Col 3 signal to GOO1
 0030           CMP_GO_EN1_SEL3:      equ 30h    ; MASK: Column 3 Signal Select
 0008           CMP_GO_EN1_GOO6:      equ 08h    ; MASK: Selected Col 2 signal to GOO4
 0004           CMP_GO_EN1_GOO2:      equ 04h    ; MASK: Selected Col 2 signal to GOO0
 0003           CMP_GO_EN1_SEL2:      equ 03h    ; MASK: Column 2 Signal Select
 0000           
 0066           AMD_CR1:      equ 66h          ; Analog Modulator Control Register 1      (RW)
 0007           AMD_CR1_AMOD1:        equ 07h    ; MASK: Modulation ctrl for analog column 1
 0000           
 0067           ALT_CR0:      equ 67h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT1:         equ 0F0h    ; MASK: Look up table 1 selection
 000F           ALT_CR0_LUT0:         equ 0Fh    ; MASK: Look up table 0 selection
 0000           
 0068           ALT_CR1:      equ 68h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT3:         equ 0F0h    ; MASK: Look up table 3 selection
 000F           ALT_CR0_LUT2:         equ 0Fh    ; MASK: Look up table 2 selection
 0000           
 0069           CLK_CR2:      equ 69h          ; Analog Clock Source Control Register 3   (RW)
 0008           CLK_CR2_ACLK1R:       equ 08h    ; MASK: Analog Column 1 Range 
 0001           CLK_CR2_ACLK0R:       equ 01h    ; MASK: Analog Column 0 Range
 0000           
 0000           ;------------------------------------------------
 0000           ;  USB Registers
 0000           ;------------------------------------------------
 0000           
 00C1           USB_CR1:      equ 0C1h          ; USB Control Register 1                   (#)
 0004           USB_CR1_BUS_ACTIVITY: equ 04h    ; MASK: monitors activity on USB bus     (RC)
 0002           USB_CR1_ENABLE_LOCK:  equ 02h    ; MASK: enable/disable auto lock of osc  (RW)
 0001           USB_CR1_REG_ENABLE:   equ 01h    ; MASK: set mode to reg. on/pass thru    (RW)
 0000           
 00C4           EP1_CR0:      equ 0C4h          ; EP1 Control Register 0                   (#)
 0080           EP1_CR0_STALL:        equ 80h    ; MASK: enable/disable stall             (RW)
 0020           EP1_CR0_NAK_INT_EN:   equ 20h    ; MASK: enable/disable NAK interrupts    (RW)
 0010           EP1_CR0_ACKD:         equ 10h    ; MASK: set when acked transaction occurs(RC)
 000F           EP1_CR0_MODE:         equ 0Fh    ; MASK: mode control for endpoint        (RW)
 0000           
 00C5           EP2_CR0:      equ 0C5h          ; EP2 Control Register 0                   (#)
 0080           EP2_CR0_STALL:        equ 80h    ; MASK: enable/disable stall             (RW)
 0020           EP2_CR0_NAK_INT_EN:   equ 20h    ; MASK: enable/disable NAK interrupts    (RW)
 0010           EP2_CR0_ACKD:         equ 10h    ; MASK: set when acked transaction occurs(RC)
 000F           EP2_CR0_MODE:         equ 0Fh    ; MASK: mode control for endpoint        (RW)
 0000           
 00C6           EP3_CR0:      equ 0C6h          ; EP3 Control Register 0                   (#)
 0080           EP3_CR0_STALL:        equ 80h    ; MASK: enable/disable stall             (RW)
 0020           EP3_CR0_NAK_INT_EN:   equ 20h    ; MASK: enable/disable NAK interrupts    (RW)
 0010           EP3_CR0_ACKD:         equ 10h    ; MASK: set when acked transaction occurs(RC)
 000F           EP3_CR0_MODE:         equ 0Fh    ; MASK: mode control for endpoint        (RW)
 0000           
 00C7           EP4_CR0:      equ 0C7h          ; EP4 Control Register 0                   (#)
 0080           EP4_CR0_STALL:        equ 80h    ; MASK: enable/disable stall             (RW)
 0020           EP4_CR0_NAK_INT_EN:   equ 20h    ; MASK: enable/disable NAK interrupts    (RW)
 0010           EP4_CR0_ACKD:         equ 10h    ; MASK: set when acked transaction occurs(RC)
 000F           EP4_CR0_MODE:         equ 0Fh    ; MASK: mode control for endpoint        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Global Digital Interconnects
 0000           ;------------------------------------------------
 0000           
 00D0           GDI_O_IN:     equ 0D0h          ; Global Dig Interconnect Odd Inputs Reg   (RW)
 00D1           GDI_E_IN:     equ 0D1h          ; Global Dig Interconnect Even Inputs Reg  (RW)
 00D2           GDI_O_OU:     equ 0D2h          ; Global Dig Interconnect Odd Outputs Reg  (RW)
 00D3           GDI_E_OU:     equ 0D3h          ; Global Dig Interconnect Even Outputs Reg (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  AMuxBus Mux Control Registers
 0000           ;------------------------------------------------
 0000           
 00D8           MUX_CR0:      equ 0D8h          ; Analog Mux Bus Port 0 Bit Enables Reg    (RW)
 00D9           MUX_CR1:      equ 0D9h          ; Analog Mux Bus Port 1 Bit Enables Reg    (RW)
 00DA           MUX_CR2:      equ 0DAh          ; Analog Mux Bus Port 2 Bit Enables Reg    (RW)
 00DB           MUX_CR3:      equ 0DBh          ; Analog Mux Bus Port 3 Bit Enables Reg    (RW)
 00EC           MUX_CR4:      equ 0ECh          ; Analog Mux Bus Port 4 Bit Enables Reg    (RW)
 00ED           MUX_CR5:      equ 0EDh          ; Analog Mux Bus Port 5 Bit Enables Reg    (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Clock and System Control Registers
 0000           ;------------------------------------------------
 0000           
 00DD           OSC_GO_EN:    equ 0DDh          ; Oscillator to Global Outputs Enable Register (RW)
 0080           OSC_GOEN_SLPINT:      equ 80h	 ; Enable Sleep Timer onto GOE[7]
 0040           OSC_GOEN_VC3:         equ 40h    ; Enable VC3 onto GOE[6]
 0020           OSC_GOEN_VC2:         equ 20h    ; Enable VC2 onto GOE[5]
 0010           OSC_GOEN_VC1:         equ 10h    ; Enable VC1 onto GOE[4]
 0008           OSC_GOEN_SYSCLKX2:    equ 08h    ; Enable 2X SysClk onto GOE[3]
 0004           OSC_GOEN_SYSCLK:      equ 04h    ; Enable 1X SysClk onto GOE[2]
 0002           OSC_GOEN_CLK24M:      equ 02h    ; Enable 24 MHz clock onto GOE[1]
 0001           OSC_GOEN_CLK32K:      equ 01h    ; Enable 32 kHz clock onto GOE[0]
 0000           
 00DE           OSC_CR4:      equ 0DEh          ; Oscillator Control Register 4            (RW)
 0003           OSC_CR4_VC3SEL:       equ 03h    ; MASK: System VC3 Clock source
 0000           
 00DF           OSC_CR3:      equ 0DFh          ; Oscillator Control Register 3            (RW)
 0000           
 00E0           OSC_CR0:      equ 0E0h          ; System Oscillator Control Register 0     (RW)
 0080           OSC_CR0_32K_SELECT:   equ 80h    ; MASK: Enable/Disable External XTAL Osc
 0040           OSC_CR0_PLL_MODE:     equ 40h    ; MASK: Enable/Disable PLL
 0020           OSC_CR0_NO_BUZZ:      equ 20h    ; MASK: Bandgap always powered/BUZZ bandgap
 0018           OSC_CR0_SLEEP:        equ 18h    ; MASK: Set Sleep timer freq/period
 0000           OSC_CR0_SLEEP_512Hz:  equ 00h    ;     Set sleep bits for 1.95ms period
 0008           OSC_CR0_SLEEP_64Hz:   equ 08h    ;     Set sleep bits for 15.6ms period
 0010           OSC_CR0_SLEEP_8Hz:    equ 10h    ;     Set sleep bits for 125ms period
 0018           OSC_CR0_SLEEP_1Hz:    equ 18h    ;     Set sleep bits for 1 sec period
 0007           OSC_CR0_CPU:          equ 07h    ; MASK: Set CPU Frequency
 0000           OSC_CR0_CPU_3MHz:     equ 00h    ;     set CPU Freq bits for 3MHz Operation
 0001           OSC_CR0_CPU_6MHz:     equ 01h    ;     set CPU Freq bits for 6MHz Operation
 0002           OSC_CR0_CPU_12MHz:    equ 02h    ;     set CPU Freq bits for 12MHz Operation
 0003           OSC_CR0_CPU_24MHz:    equ 03h    ;     set CPU Freq bits for 24MHz Operation
 0004           OSC_CR0_CPU_1d5MHz:   equ 04h    ;     set CPU Freq bits for 1.5MHz Operation
 0005           OSC_CR0_CPU_750kHz:   equ 05h    ;     set CPU Freq bits for 750kHz Operation
 0006           OSC_CR0_CPU_187d5kHz: equ 06h    ;     set CPU Freq bits for 187.5kHz Operation
 0007           OSC_CR0_CPU_93d7kHz:  equ 07h    ;     set CPU Freq bits for 93.7kHz Operation
 0000           
 00E1           OSC_CR1:      equ 0E1h          ; System VC1/VC2 Divider Control Register  (RW)
 00F0           OSC_CR1_VC1:          equ 0F0h    ; MASK: System VC1 24MHz/External Clk divider
 000F           OSC_CR1_VC2:          equ 0Fh    ; MASK: System VC2 24MHz/External Clk divider
 0000           
 00E2           OSC_CR2:      equ 0E2h          ; Oscillator Control Register 2            (RW)
 0080           OSC_CR2_PLLGAIN:      equ 80h    ; MASK: High/Low gain
 0004           OSC_CR2_EXTCLKEN:     equ 04h    ; MASK: Enable/Disable External Clock
 0001           OSC_CR2_SYSCLKX2DIS:  equ 01h    ; MASK: Enable/Disable 48MHz clock source
 0000           
 00E3           VLT_CR:       equ 0E3h          ; Voltage Monitor Control Register         (RW)
 0080           VLT_CR_SMP:           equ 80h    ; MASK: Enable Switch Mode Pump
 0030           VLT_CR_PORLEV:        equ 30h    ; MASK: Mask for Power on Reset level control
 0000           VLT_CR_POR_LOW:       equ 00h    ;   Lowest  Precision Power-on Reset trip point
 0010           VLT_CR_POR_MID:       equ 10h    ;   Middle  Precision Power-on Reset trip point
 0020           VLT_CR_POR_HIGH:      equ 20h    ;   Highest Precision Power-on Reset trip point
 0008           VLT_CR_LVDTBEN:       equ 08h    ; MASK: Enable the CPU Throttle Back on LVD
 0007           VLT_CR_VM:            equ 07h    ; MASK: Mask for Voltage Monitor level setting
 0000           
 00E4           VLT_CMP:      equ 0E4h          ; Voltage Monitor Comparators Register     (R)
 0004           VLT_CMP_PUMP:         equ 04h    ; MASK: Vcc below SMP trip level
 0002           VLT_CMP_LVD:          equ 02h    ; MASK: Vcc below LVD trip level
 0001           VLT_CMP_PPOR:         equ 01h    ; MASK: Vcc below PPOR trip level
 0000           
 00E7           DEC_CR2:      equ 0E7h          ; Data Control Register 2                  (RW)
 0000           
 00E8           IMO_TR:               equ 0E8h    ; Internal Main Oscillator Trim Register   (RW)
 00E9           ILO_TR:               equ 0E9h    ; Internal Low-speed Oscillator Trim       (W)
 00EA           BDG_TR:               equ 0EAh    ; Band Gap Trim Register                   (RW)
 00EB           ECO_TR:               equ 0EBh    ; External Oscillator Trim Register        (W)
 00EF           IMO_TR2:              equ 0EFh    ; Internal Main Oscillator Gain Trim Register (RW)
 0000           
 00FD           DAC_CR:       equ 0FDh          ; DAC Control Register                     (RW)
 0080           DAC_CR_SPLIT_MUX:     equ 80h    ; MASK: enable/disable Splitting of AMuxBuses
 0040           DAC_CR_MUXCLK_GE:     equ 40h    ; MASK: Connect/Disconnect AMuxBus to GOO[6]
 0008           DAC_CR_RANGE:	       equ 08h    ; MASK: High Range/Low Range
 0006           DAC_CR_OSCMODE:	    equ 06h    ; MASK: Sets Reset Mode for AMuxBus
 0001           DAC_CR_ENABLE:        equ 01h    ; MASK: enable/disable AMux Bus
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      M8C System Macros
 0000           ;;  These macros should be used when their functions are needed.
 0000           ;;=============================================================================
 0000           
 0000           ;----------------------------------------------------
 0000           ;  Swapping Register Banks
 0000           ;----------------------------------------------------
 0000               macro M8C_SetBank0
 0000               and   F, ~FLAG_XIO_MASK
 0000               macro M8C_SetBank1
 0000               or    F, FLAG_XIO_MASK
 0000               macro M8C_EnableGInt
 0000               or    F, FLAG_GLOBAL_IE
 0000               macro M8C_DisableGInt
 0000               and   F, ~FLAG_GLOBAL_IE
 0000               macro M8C_DisableIntMask
 0000               and   reg[@0], ~@1              ; disable specified interrupt enable bit
 0000               macro M8C_EnableIntMask
 0000               or    reg[@0], @1               ; enable specified interrupt enable bit
 0000               macro M8C_ClearIntFlag
 0000               mov   reg[@0], ~@1              ; clear specified interrupt enable bit
 0000               macro M8C_EnableWatchDog
 0000               and   reg[CPU_SCR0], ~CPU_SCR0_PORS_MASK
 0000               macro M8C_ClearWDT
 0000               mov   reg[RES_WDT], 00h
 0000               macro M8C_ClearWDTAndSleep
 0000               mov   reg[RES_WDT], 38h
 0000               macro M8C_Stall
 0000               or    reg[ASY_CR], ASY_CR_SYNCEN
 0000               macro M8C_Unstall
 0000               and   reg[ASY_CR], ~ASY_CR_SYNCEN
 0000               macro M8C_Sleep
 0000               or    reg[CPU_SCR0], CPU_SCR0_SLEEP_MASK
 0000               ; The next instruction to be executed depends on the state of the
 0000               ; various interrupt enable bits. If some interrupts are enabled
 0000               ; and the global interrupts are disabled, the next instruction will
 0000               ; be the one that follows the invocation of this macro. If global
 0000               ; interrupts are also enabled then the next instruction will be
 0000               ; from the interrupt vector table. If no interrupts are enabled
 0000               ; then the CPU sleeps forever.
 0000               macro M8C_Stop
 0000               ; In general, you probably don't want to do this, but here's how:
 0000               or    reg[CPU_SCR0], CPU_SCR0_STOP_MASK
 0000               ; Next instruction to be executed is located in the interrupt
 0000               ; vector table entry for Power-On Reset.
 0000               macro M8C_Reset
 0000               ; Restore CPU to the power-on reset state.
 0000               mov A, 0
 0000               SSC
 0000               ; Next non-supervisor instruction will be at interrupt vector 0.
 0000               macro Suspend_CodeCompressor
 0000               or   F, 0
 0000               macro Resume_CodeCompressor
 0000               add  SP, 0
 0005           USBFS_bNumStringDescrs: EQU    0x5
 0000           
 0005           USB_NUM_ENDPOINTS:                          EQU 5 
 0004           USB_MAX_EP_NUMBER:                          EQU (USB_NUM_ENDPOINTS - 1) 
 0000           
 0002           USB_3V_OPERATION:                           EQU 0x02
 0003           USB_5V_OPERATION:                           EQU 0x03
 0000           
 0000           ;--------------------------------------------------
 0000           ; Constants for interrupt regs and masks
 0000           ;--------------------------------------------------
 00DF           USBFS_INT_REG:                             equ 0xDF
 0001           USBFS_INT_RESET_MASK:                      equ 0x01
 0002           USBFS_INT_SOF_MASK:                        equ 0x02
 0004           USBFS_INT_EP0_MASK:                        equ 0x04
 0008           USBFS_INT_EP1_MASK:                        equ 0x08
 0010           USBFS_INT_EP2_MASK:                        equ 0x10
 0020           USBFS_INT_EP3_MASK:                        equ 0x20
 0040           USBFS_INT_EP4_MASK:                        equ 0x40
 0080           USBFS_INT_WAKEUP_MASK:                     equ 0x80
 0000           
 0000           ;--------------------------------------------------
 0000           ; Registers for USBFS API's.
 0000           ;--------------------------------------------------
 0000           
 004A           USBFS_ADDR:                                 EQU 0x4a
 004B           USBFS_USBIO_CR0:                            EQU 0x4b
 004C           USBFS_USBIO_CR1:                            EQU 0x4c
 00C1           USBFS_USB_CR1:                              EQU 0xc1 
 0000           
 0056           USBFS_EP0MODE:                              EQU 0x56
 0057           USBFS_EP0CNT:                               EQU 0x57
 0058           USBFS_EP0DATA:                              EQU 0x58
 00C4           USBFS_EP1MODE:                              EQU 0xc4
 004F           USBFS_EP1CNT0:                              EQU 0x4f
 004E           USBFS_EP1CNT1:                              EQU 0x4e
 00C5           USBFS_EP2MODE:                              EQU 0xc5
 0051           USBFS_EP2CNT0:                              EQU 0x51
 0050           USBFS_EP2CNT1:                              EQU 0x50
 00C6           USBFS_EP3MODE:                              EQU 0xc6
 0053           USBFS_EP3CNT0:                              EQU 0x53
 0052           USBFS_EP3CNT1:                              EQU 0x52
 00C7           USBFS_EP4MODE:                              EQU 0xc7
 0055           USBFS_EP4CNT0:                              EQU 0x55
 0054           USBFS_EP4CNT1:                              EQU 0x54
 0000           
 0000           ;--------------------------------------------------
 0000           ; Endpoint 0 offsets (Table 9-2)
 0000           ;--------------------------------------------------
 0000           bmRequestType:                              EQU 0
 0001           bRequest:                                   EQU 1
 0002           wValue:                                     EQU 2
 0003           wValueHi:                                   EQU 3
 0002           wValueLo:                                   EQU 2
 0004           wIndex:                                     EQU 4
 0005           wIndexHi:                                   EQU 5
 0004           wIndexLo:                                   EQU 4
 0006           wLength:                                    EQU 6
 0007           wLengthHi:                                  EQU 7
 0006           wLengthLo:                                  EQU 6
 0000           
 0000           ;--------------------------------------------------
 0000           ; Request Types (Table 9-4)
 0000           ;--------------------------------------------------
 0000           USB_GET_STATUS:                             EQU    0x00
 0001           USB_CLEAR_FEATURE:                          EQU    0x01
 0003           USB_SET_FEATURE:                            EQU    0x03
 0005           USB_SET_ADDRESS:                            EQU    0x05
 0006           USB_GET_DESCRIPTOR:                         EQU    0x06
 0007           USB_SET_DESCRIPTOR:                         EQU    0x07
 0008           USB_GET_CONFIGURATION:                      EQU    0x08
 0009           USB_SET_CONFIGURATION:                      EQU    0x09
 000A           USB_GET_INTERFACE:                          EQU    0x0A
 000B           USB_SET_INTERFACE:                          EQU    0x0B
 000C           USB_SYNCH_FRAME:                            EQU    0x0C
 0000           
 0000           ;--------------------------------------------------
 0000           ; Descriptor Types (Table 9-5)
 0000           ;--------------------------------------------------
 0001           DESCR_TYPE_DEVICE:                          EQU     1
 0002           DESCR_TYPE_CONFIG:                          EQU     2
 0003           DESCR_TYPE_STRING:                          EQU     3
 0004           DESCR_TYPE_INTERFACE:                       EQU     4
 0005           DESCR_TYPE_ENDPOINT:                        EQU     5
 0006           DESCR_TYPE_DEVICE_QUALIFIER:                EQU     6
 0007           DESCR_TYPE_OTHER_SPEED:                     EQU     7
 0008           DESCR_TYPE_INTERFACE_POWER:                 EQU     8
 0000           
 0000           ;--------------------------------------------------
 0000           ; Feature Selectors (Table 9-6)
 0000           ;--------------------------------------------------
 0001           USB_DEVICE_REMOTE_WAKEUP:                   EQU    0x01
 0000           USB_ENDPOINT_HALT:                          EQU    0x00
 0002           USB_TEST_MODE:                              EQU    0x02
 0000           
 0000           ;--------------------------------------------------
 0000           ; USB Device Status (Figure 9-4)
 0000           ;--------------------------------------------------
 0000           USB_DEVICE_STATUS_BUS_POWERED:              EQU   0x00
 0001           USB_DEVICE_STATUS_SELF_POWERED:             EQU   0x01
 0002           USB_DEVICE_STATUS_REMOTE_WAKEUP:            EQU   0x02
 0000           
 0000           ;--------------------------------------------------
 0000           ; USB Endpoint Status (Figure 9-4)
 0000           ;--------------------------------------------------
 0001           USB_ENDPOINT_STATUS_HALT:                   EQU    0x01
 0000           
 0000           ;--------------------------------------------------
 0000           ; USB Endpoint Directions
 0000           ;--------------------------------------------------
 0080           USB_DIR_IN:                                 EQU    0x80
 0000           USB_DIR_OUT:                                EQU    0x00
 007F           USB_DIR_UNUSED:                             EQU    0x7F
 0000           
 0000           ;--------------------------------------------------
 0000           ; USB Endpoint Address Symbols 
 0000           ;--------------------------------------------------
 0000           EP0:                                        EQU    0x00
 0001           EP1:                                        EQU    0x01
 0002           EP2:                                        EQU    0x02
 0003           EP3:                                        EQU    0x03
 0004           EP4:                                        EQU    0x04
 0000           
 0000           ;--------------------------------------------------
 0000           ; Control Endpoint States--These act as JACC jump values
 0000           ;--------------------------------------------------
 0000           USB_TRANS_STATE_IDLE:                       EQU     0x00         ;
 0002           USB_TRANS_STATE_CONTROL_READ:               EQU     0x02         ;
 0004           USB_TRANS_STATE_CONTROL_WRITE:              EQU     0x04         ;
 0006           USB_TRANS_STATE_NO_DATA_CONTROL:            EQU     0x06         ;
 0000           
 0000           ;--------------------------------------------------
 0000           ; Control Write flag values to indicate pending data changes
 0000           ;--------------------------------------------------
 0001           USB_ADDRESS_CHANGE_PENDING:     EQU     0x01
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Constants for USBFS
 0000           ;--------------------------------------------------
 0080           USB_ADDR_ENABLE: 			                         EQU    0x80
 0040           USB_CNT_VALID: 				                          EQU    0x40
 0080           USB_CNT_TOGGLE: 			                          EQU    0x80
 0004           USB_PULLUP_ENABLE:			                        EQU    0x04
 0000           USB_AUTO_DPDM: 				                          EQU    0x00
 0003           USB_REG_ENABLE: 			                          EQU    0x03
 0002           USB_PASS_THRU: 				                          EQU    0x02
 0004           USB_BUS_ACTIVITY: 			                        EQU    0x04
 0000           
 0000           USB_MODE_DISABLE:                            EQU 0x00
 0001           USB_MODE_NAK_IN_OUT:                         EQU 0x01
 0002           USB_MODE_STATUS_OUT_ONLY:                    EQU 0x02
 0003           USB_MODE_STALL_IN_OUT:                       EQU 0x03
 0004           USB_MODE_RESERVED_0100:                      EQU 0x04
 0005           USB_MODE_ISO_OUT:                            EQU 0x05
 0006           USB_MODE_STATUS_IN_ONLY:                     EQU 0x06
 0007           USB_MODE_ISO_IN:                             EQU 0x07
 0008           USB_MODE_NAK_OUT:                            EQU 0x08
 0009           USB_MODE_ACK_OUT:                            EQU 0x09
 000A           USB_MODE_RESERVED_1010:                      EQU 0x0A
 000B           USB_MODE_ACK_OUT_STATUS_IN:                  EQU 0x0B
 000C           USB_MODE_NAK_IN:                             EQU 0x0C
 000D           USB_MODE_ACK_IN:                             EQU 0x0D
 000E           USB_MODE_RESERVED_1110:                      EQU 0x0E
 000F           USB_MODE_ACK_IN_STATUS_OUT:                  EQU 0x0F
 0080           USB_MODE_STALL_DATA_EP:                      EQU 0x80
 0000           
 0000           ;--------------------------------------------------
 0000           ; LoadInEP Count Toggle (Argument values)
 0000           ;--------------------------------------------------
 0000           USB_NO_TOGGLE:                               EQU 0x00
 0001           USB_TOGGLE:                                  EQU 0x01
 0000           
 0000           ;--------------------------------------------------
 0000           ; FORCE J/K/SE0 (Argument values)
 0000           ;--------------------------------------------------
 00A0           USB_FORCE_J:                                 EQU 0xA0
 0080           USB_FORCE_K:                                 EQU 0x80
 00C0           USB_FORCE_SE0:                               EQU 0xC0
 0000           USB_FORCE_NONE:                              EQU 0x00
 0001           USB_FORCE_STATE:                             EQU 0x01
 0000           
 0000           ;-----------------------------------------------
 0000           ; Endpoint event flags
 0000           ;-----------------------------------------------
 0002           NO_EVENT_ALLOWED:	equ               2
 0001           EVENT_PENDING:      equ               1
 0000           NO_EVENT_PENDING:   equ               0
 0000           
 0000           IN_BUFFER_FULL:     equ               NO_EVENT_PENDING
 0001           IN_BUFFER_EMPTY:    equ               EVENT_PENDING
 0001           OUT_BUFFER_FULL:    equ               EVENT_PENDING
 0000           OUT_BUFFER_EMPTY:   equ               NO_EVENT_PENDING
 0000           
 0000           ;--------------------------------------------------
 0000           ; USB Request Dispatch Functions, including overrides
 0000           ;--------------------------------------------------
 0001           USB_NOT_SUPPORTED:  EQU 0x01
 0002           USB_UM_SUPPLIED:    EQU 0x02
 0004           USB_APP_SUPPLIED:   EQU 0x04
 0000           
 0000           ;--------------------------------------------------
 0000           ; Device to host (d2h) Standard (std) Device (dev)
 0000           ;--------------------------------------------------
 0002           USB_CB_SRC_d2h_std_dev_00: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_d2h_std_dev_01: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_dev_02: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_dev_03: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_dev_04: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_dev_05: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_d2h_std_dev_06: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_d2h_std_dev_07: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_d2h_std_dev_08: equ USB_UM_SUPPLIED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Host to device (h2d) Standard (std) Device (dev)
 0000           ;--------------------------------------------------
 0001           USB_CB_SRC_h2d_std_dev_00: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_std_dev_01: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_h2d_std_dev_02: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_std_dev_03: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_h2d_std_dev_04: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_std_dev_05: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_h2d_std_dev_06: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_dev_07: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_dev_08: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_std_dev_09: equ USB_UM_SUPPLIED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Device to host (d2h) Standard (std) Interface (ifc)
 0000           ;--------------------------------------------------
 0002           USB_CB_SRC_d2h_std_ifc_00: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_d2h_std_ifc_01: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ifc_02: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ifc_03: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ifc_04: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ifc_05: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_d2h_std_ifc_06: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_d2h_std_ifc_07: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ifc_08: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ifc_09: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_d2h_std_ifc_10: equ USB_UM_SUPPLIED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Host to device (h2d) Standard (std) Interface (ifc)
 0000           ;--------------------------------------------------
 0001           USB_CB_SRC_h2d_std_ifc_00: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_01: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_02: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_03: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_04: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_05: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_06: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_07: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_08: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_09: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_10: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_std_ifc_11: equ USB_NOT_SUPPORTED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Device to host (d2h) Standard (std) Endpoint (ep)
 0000           ;--------------------------------------------------
 0002           USB_CB_SRC_d2h_std_ep_00: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_d2h_std_ep_01: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_02: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_03: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_04: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_05: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_06: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_07: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_08: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_09: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_10: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_11: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_d2h_std_ep_12: equ USB_NOT_SUPPORTED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Host to device (h2d) Standard (std) Endpoint (ep)
 0000           ;--------------------------------------------------
 0001           USB_CB_SRC_h2d_std_ep_00: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_std_ep_01: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_h2d_std_ep_02: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_std_ep_03: equ USB_UM_SUPPLIED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Device to Host (d2h) Class (cls) Interface (ifc)
 0000           ;--------------------------------------------------
 0001           USB_CB_SRC_d2h_cls_ifc_00: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_d2h_cls_ifc_01: equ USB_UM_SUPPLIED
 0002           USB_CB_SRC_d2h_cls_ifc_02: equ USB_UM_SUPPLIED
 0002           USB_CB_SRC_d2h_cls_ifc_03: equ USB_UM_SUPPLIED
 0000           
 0000           ;--------------------------------------------------
 0000           ; Host to Device (h2d) Class (cls) Interface (ifc)
 0000           ;--------------------------------------------------
 0001           USB_CB_SRC_h2d_cls_ifc_00: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_01: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_02: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_03: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_04: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_05: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_06: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_07: equ USB_NOT_SUPPORTED
 0001           USB_CB_SRC_h2d_cls_ifc_08: equ USB_NOT_SUPPORTED
 0002           USB_CB_SRC_h2d_cls_ifc_09: equ USB_UM_SUPPLIED
 0002           USB_CB_SRC_h2d_cls_ifc_10: equ USB_UM_SUPPLIED
 0002           USB_CB_SRC_h2d_cls_ifc_11: equ USB_UM_SUPPLIED
 0001           USB_CB_SRC_h2d_cls_ifc_12: equ USB_NOT_SUPPORTED
 0000           
 0000           ;-----------------------------------------------
 0000           ; 1st Tier Dispatch--Standard Requests
 0000           ;-----------------------------------------------
 0001           USB_CB_h2d_std_dev: equ 1
 0001           USB_CB_h2d_std_ifc: equ 1
 0001           USB_CB_h2d_std_ep:  equ 1
 0000           USB_CB_h2d_std_oth: equ 0
 0001           USB_CB_d2h_std_dev: equ 1
 0001           USB_CB_d2h_std_ifc: equ 1
 0001           USB_CB_d2h_std_ep:  equ 1
 0000           USB_CB_d2h_std_oth: equ 0
 0000           
 0000           ;-----------------------------------------------
 0000           ; 1st Tier Dispatch--Class Requests
 0000           ;-----------------------------------------------
 0000           USB_CB_h2d_cls_dev: equ 0
 0001           USB_CB_h2d_cls_ifc: equ 1
 0000           USB_CB_h2d_cls_ep:  equ 0
 0000           USB_CB_h2d_cls_oth: equ 0
 0000           USB_CB_d2h_cls_dev: equ 0
 0001           USB_CB_d2h_cls_ifc: equ 1
 0000           USB_CB_d2h_cls_ep:  equ 0
 0000           USB_CB_d2h_cls_oth: equ 0
 0000           
 0000           ;-----------------------------------------------
 0000           ; 1st Tier Dispatch--Vendor Specific Requests
 0000           ;-----------------------------------------------
 0000           USB_CB_h2d_vnd_dev: equ 0
 0000           USB_CB_h2d_vnd_ifc: equ 0
 0000           USB_CB_h2d_vnd_ep:  equ 0
 0000           USB_CB_h2d_vnd_oth: equ 0
 0000           USB_CB_d2h_vnd_dev: equ 0
 0000           USB_CB_d2h_vnd_ifc: equ 0
 0000           USB_CB_d2h_vnd_ep:  equ 0
 0000           USB_CB_d2h_vnd_oth: equ 0
 0000           
 0000           ;-----------------------------------------------
 0000           ; 1st Tier Dispatch--Reserved Requests
 0000           ;-----------------------------------------------
 0000           USB_CB_h2d_rsv_dev: equ 0
 0000           USB_CB_h2d_rsv_ifc: equ 0
 0000           USB_CB_h2d_rsv_ep:  equ 0
 0000           USB_CB_h2d_rsv_oth: equ 0
 0000           USB_CB_d2h_rsv_dev: equ 0
 0000           USB_CB_d2h_rsv_ifc: equ 0
 0000           USB_CB_d2h_rsv_ep:  equ 0
 0000           USB_CB_d2h_rsv_oth: equ 0
 0000           
 0000           ;-----------------------------------------------
 0000           ; HID Descriptor Types
 0000           ;-----------------------------------------------
 0021           DESCR_TYPE_HID_CLASS:        equ      0x21
 0009           DESCR_SIZE_HID_CLASS:        equ      9
 0022           DESCR_TYPE_HID_REPORT:       equ      0x22
 0023           DESCR_TYPE_HID_PHYSICAL:     equ      0x23
 0000           
 0000           ;--------------------------------------------------
 0000           ; Idle Timer (Argument values)
 0000           ;--------------------------------------------------
 0002           USB_IDLE_TIMER_RUNNING:                      EQU 0x02
 0001           USB_IDLE_TIMER_EXPIRED:                      EQU 0x01
 0000           USB_IDLE_TIMER_INDEFINITE:                   EQU 0x00
 0000           
 0000           ;--------------------------------------------------
 0000           ; Transfer Descriptor--Data Source
 0000           ;--------------------------------------------------
 0000           USB_DS_ROM:                                      EQU 0x00
 0001           USB_DS_RAM:                                      EQU 0x01
 0002           USB_DS_RAM_CB:                                   EQU 0x02
 0003           USB_DS_RAM_MASK:                                 EQU 0x03
 0000           
 0000           ;-----------------------------------------------
 0000           ; Transfer Completion Notification
 0000           ;-----------------------------------------------
 0000           USB_XFER_IDLE:         equ      0x00
 0001           USB_XFER_STATUS_ACK:   equ      0x01
 0002           USB_XFER_PREMATURE:    equ      0x02
 0003           USB_XFER_ERROR:        equ      0x03
 0000           
 0000           ; This macro is used to allocate a completion status block
 0000           ; for all Requests.  The macro parameter is used
 0000           ; to prefix the two data elements.
 0000           USB_XFER_STATUS:       equ      0
 0001           USB_XFER_LENGTH:       equ      1
 0000           MACRO    USB_XFER_STATUS_BLOCK
 0000               BLK    1    ; Completion Status
 0000               BLK    2    ; Transfer Length
 0000           USB_CLASS_NONE:                        EQU    0x00
 0001           USB_CLASS_HID:                         EQU    0x01
 0001           USBFS_CLASS:                           EQU    USB_CLASS_HID
 0000               
 0000           ;-----------------------------------------------
 0000           ; Modify the supported requests by redefining
 0000           ; them within the custom code area below
 0000           ;-----------------------------------------------
 0000           
 0000              ;@PSoC_UserCode_BODY_1@ (Do not change this line.)
 0000              ;---------------------------------------------------
 0000              ; Insert your custom assembly code below this banner
 0000              ;---------------------------------------------------
 0000              ;   NOTE: interrupt service routines must preserve
 0000              ;   the values of the A and X CPU registers.
 0000              
 0000              ;---------------------------------------------------
 0000              ; Insert your custom assembly code above this banner
 0000              ;---------------------------------------------------
 0000              
 0000              ;---------------------------------------------------
 0000              ; Insert a lcall to a C function below this banner
 0000              ; and un-comment the lines between these banners
 0000              ;---------------------------------------------------
 0000              
 0000              ;PRESERVE_CPU_CONTEXT
 0000              ;lcall _My_C_Function
 0000              ;RESTORE_CPU_CONTEXT
 0000              
 0000              ;---------------------------------------------------
 0000              ; Insert a lcall to a C function above this banner
 0000              ; and un-comment the lines between these banners
 0000              ;---------------------------------------------------
 0000              ;@PSoC_UserCode_END@ (Do not change this line.)
 0000           
 0000           ;-----------------------------------------------
 0000           ; Has the user enabled any of the Vendor Specific Requests
 0000           ;-----------------------------------------------
 0000           USBFS_VSR_SUPPORT: EQU 0
                IF USB_CB_h2d_vnd_dev
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_h2d_vnd_ifc
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_h2d_vnd_ep
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_h2d_vnd_oth
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_d2h_vnd_dev
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_d2h_vnd_ifc
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_d2h_vnd_ep
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                IF USB_CB_d2h_vnd_oth
                USBFS_VSR_SUPPORT: EQU 1
                ENDIF
                
                ; end of file USBFS.inc
 0000           MACRO   GET_WORD
 0000                   RAM_X_POINTS_TO_STACKPAGE                    ; Since called by interrupt we can call this
 0000               PUSH A                              ; Quickly get a RAM temp
 0000               PUSH A                              ; Save the source MSB
 0000               ROMX                                ; Get the first byte
 0000               PUSH X                              ; Save X
 0000               MOV  X,SP                           ; Get SP, to index to the temp 
 0000               MOV  [X - 3],A                      ; Save the first byte
 0000               POP  X                              ; Get back the source LSB
 0000               POP  A                              ; And the MSB
 0000               INC  X                              ; Point to the second byte
 0000               ADC  A, 0                           ; 
 0000               ROMX                                ; Get the second byte
 0000               MOV  X,A                            ; Save it in X
 0000               POP  A                              ; And the first byte in A
 0000               RAM_CHANGE_PAGE_MODE 00             ; Reset stack mode back
 0000           MACRO   NULL_PTR_CHECK
 0000               SWAP    A, X                        ; LSB non-zero?
 0000               JNZ     .ok                         ; Exit on non-zero
 0000               SWAP    A, X                        ; MSB zero
 0000               JZ      @0                          ; Jump to the null pointer handler
 0000               JMP     .exit
 0000           .ok:
 0000               SWAP    A, X                        ; Put them back
 0000           .exit:
 0000           NULL_PTR:   EQU 0                       ; Null pointer value
 0000           
 0000           ;--------------------------------------------------
 0000           ; TRANSFER DESCRIPTOR MACROS
 0000           ;--------------------------------------------------
 0000           
 0000           ;-----------------------------------------------
 0000           ; TD_START_TABLE MACRO
 0000           ;-----------------------------------------------
 0000           ; Parameters:
 0000           ;   @0 = Number of table entries
 0000           ; Register setup
 0000           ;   N/A (builds ROM data at assembly time)
 0000           ;-----------------------------------------------
 0000           MACRO   TD_START_TABLE
 0000               DB      ((@0) - 1)                 ; Number of table entries - 1
 0000           MACRO   TD_ENTRY
 0000               DB  @0                             ; Data source (USB_DS_*)
 0000               DW  @1                             ; Transfer size
 0000               DW  @2                             ; Data source address
 0000               DW  @3                             ; Transfer Completion Status Block Address
 0000               DB  0xde                           ; Reserved 
 0008           TD_ENTRY_SIZE:                         EQU 8
 0001           TD_START_SIZE:                         EQU 1
 0000           ;-----------------------------------------------
 0000           ; TD_INDEX_TO_OFFSET MACRO
 0000           ;-----------------------------------------------
 0000           ; Parameters:
 0000           ;   @0 = RAM address of Index
 0000           ; Register setup
 0000           ;   A = DC (restored)
 0000           ;   X = DC (not used)
 0000           ;--------------------------------------------------
 0000           MACRO   TD_INDEX_TO_OFFSET
 0000               PUSH    A                          ; Save a work register
 0000               ASL     [@0]                       ; Index * 2
 0000               ASL     [@0]                       ; Index * 4
 0000               ASL     [@0]                       ; Index * 8
 0000               POP     A                          ; Restore the work register
 0000           MACRO LT_START
 0000               DB      (@0)                       ; Table size
 0000           MACRO LT_ENTRY
 0000               DW      (@0)                       ; Table entry
 0000               DW      (@1)                       ; Table entry
 0002           LT_ENTRY_SIZE:                         EQU 2
 0001           LT_START_SIZE:                         EQU 1
 0000           
 0000           ;-----------------------------------------------
 0000           ; LT_INDEX_TO_OFFSET MACRO
 0000           ;-----------------------------------------------
 0000           ; Parameters:
 0000           ;   @0 = RAM address of Index
 0000           ; Register setup
 0000           ;   A = DC (not used)
 0000           ;   X = DC (not used)
 0000           ;--------------------------------------------------
 0000           MACRO   LT_INDEX_TO_OFFSET
 0000               ASL     [@0]                       ; Simply shift (mult by 2)
 0000               ASL     [@0]                       ;              (mult by 4)
 0000           MACRO DISPATCHER
 0000               CMP   A,@1
 0000               JNC   .dispatch_not_supported
 0000               ASL   A
 0000               JACC  @0
 0000           .dispatch_not_supported:
 0000               JMP  @2    
 0001           USB_NOT_SUPPORTED:  EQU 0x01
 0002           USB_UM_SUPPLIED:    EQU 0x02
 0004           USB_APP_SUPPLIED:   EQU 0x04
 0000           ; end of file USBFS_macro.inc
 0000           
 0001           WIZARD: equ 1
 0001           WIZARD_DEFINED_REPORT_STORAGE: equ 1
 0000              ;--------------------------------------------------- 
 0000              ;@PSoC_UserCode_BODY_1@ (Do not change this line.)
 0000              ;---------------------------------------------------
 0000              ; Insert your custom code below this banner
 0000              ;---------------------------------------------------
 0000              ; Redefine the WIZARD equate to 0 below by 
 0000              ; uncommenting the WIZARD: equ 0 line 
 0000              ; to allow your custom descriptor to take effect
 0000              ;--------------------------------------------------- 
 0000           
 0000              ; WIZARD: equ 0
 0000              ; WIZARD_DEFINED_REPORT_STORAGE: equ 0
 0000              
 0000              ;---------------------------------------------------
 0000              ; Insert your custom code above this banner
 0000              ;---------------------------------------------------
 0000              ;@PSoC_UserCode_END@ (Do not change this line.)
 0000           
                IF WIZARD
                ;-----------------------------------------------
                ; USB Descriptors--Generated by the USB Setup Wizard
                ;-----------------------------------------------
                AREA  lit     (ROM,REL,CON)
                ;----------------------------------------------------------------------
                ; Descriptor Dispatch Tables
                ;   The following tables provide the dispatching pointers and
                ;   descriptor lengths necessary for the request handler to
                ;   respond to USB requests.
                ;----------------------------------------------------------------------
                
                ;----------------------------------------------------------------------
                ; Device Dispatch Table
                ;   for User Module: (USBFS)
                ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_DEVICE_LOOKUP
 0000           .LITERAL
 0000           USBFS_DEVICE_LOOKUP:                             ;
 0000 01            DB      (1)                       ; Table size
 0001 0005          DW      (USBFS_D0_CONFIG_LOOKUP)                       ; Table entry
 0003 00C4          DW      (USBFS_D0_CONFIG_DESCR_TABLE)                       ; Table entry
 0005           .ENDLITERAL
 0005           
 0005           ;----------------------------------------------------------------------
 0005           ; Configuration Dispatch Table
 0005           ;   for Device: (USBFS_D0)
 0005           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_D0_CONFIG_LOOKUP
 0005           .LITERAL
 0005           USBFS_D0_CONFIG_LOOKUP:                          ;
 0005 01            DB      (1)                       ; Table size
 0006 0010          DW      (USBFS_D0_C1_EP_SETUP)                       ; Table entry
 0008 000A          DW      (USBFS_D0_C1_INTERFACE_LOOKUP)                       ; Table entry
 000A           .ENDLITERAL
 000A           
 000A           ;----------------------------------------------------------------------
 000A           ; Interface Look Up Table
 000A           ; 
 000A           ; This look up table points to three tables.  Each of those tables is
 000A           ; indexed by the selected interface number provided by the request.
 000A           ;
 000A           ; Item 0: HID Report GET_REPORT/SET_REPORT Lookup Table
 000A           ; Item 1: HID Report Descriptor Transfer Descriptor Table
 000A           ; Item 2: HID Class Descriptor Transfer Descriptor Table
 000A           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_D0_C1_INTERFACE_LOOKUP
 000A           .LITERAL
 000A           USBFS_D0_C1_INTERFACE_LOOKUP:                    ;
 000A 0014        DW    USBFS_D0_C1_INTERFACE_RPT_LOOKUP         ; Interface GET_REPORT/SET_REPORT Lookup Table
 000C 0033        DW    USBFS_D0_C1_HID_RPT_DESCR_TABLE          ; HID Report Descriptor Transfer Descriptor Table
 000E 001A        DW    USBFS_D0_C1_HID_CLASS_DESCR_TABLE        ; HID Class Descriptor Transfer Descriptor Table
 0010           .ENDLITERAL
 0010           
 0010           ;----------------------------------------------------------------------
 0010           ; Endpoint Setup Table
 0010           ; 
 0010           ; This table provides the data to configure the endpoint mode registers
 0010           ; for IN/OUT direction.
 0010           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 0010           .LITERAL
 0010           USBFS_D0_C1_EP_SETUP:                            ;
 0010 80          DB    USB_DIR_IN                               ; Endpoint EP1(IN)
 0011 80          DB    USB_DIR_IN                               ; Endpoint EP2(IN)
 0012 80          DB    USB_DIR_IN                               ; Endpoint EP3(IN)
 0013 7F          DB    USB_DIR_UNUSED                           ; Endpoint EP4 not used for this configuration
 0014           .ENDLITERAL
 0014           
 0014           ;----------------------------------------------------------------------
 0014           ; Interface Lookup Table
 0014           ; 
 0014           ; This table is indexed by interface number.
 0014           ;
 0014           ;----------------------------------------------------------------------
                EXPORT USBFS_D0_C1_INTERFACE_RPT_LOOKUP
 0014           .LITERAL
 0014           USBFS_D0_C1_INTERFACE_RPT_LOOKUP:                ;
 0014 004C        DW    USBFS_D0_C1_I0_HID_RPT_LOOKUP            
 0016 0074        DW    USBFS_D0_C1_I1_HID_RPT_LOOKUP            
 0018 009C        DW    USBFS_D0_C1_I2_HID_RPT_LOOKUP            
 001A           .ENDLITERAL
 001A           
 001A           ;----------------------------------------------------------------------
 001A           ; HID Class Descriptor transfer descriptor table
 001A           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_D0_C1_HID_CLASS_DESCR_TABLE
 001A           .LITERAL
 001A           USBFS_D0_C1_HID_CLASS_DESCR_TABLE:               ;
 001A 02            DB      ((3) - 1)                 ; Number of table entries - 1
 001B 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 001C 0009          DW  DESCR_SIZE_HID_CLASS                             ; Transfer size
 001E 00FA          DW  USBFS_D0_C1_I0_HID_DESCR_START                             ; Data source address
 0020 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0022 DE            DB  0xde                           ; Reserved 
 0023 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 0024 0009          DW  DESCR_SIZE_HID_CLASS                             ; Transfer size
 0026 0113          DW  USBFS_D0_C1_I1_HID_DESCR_START                             ; Data source address
 0028 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 002A DE            DB  0xde                           ; Reserved 
 002B 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 002C 0009          DW  DESCR_SIZE_HID_CLASS                             ; Transfer size
 002E 012C          DW  USBFS_D0_C1_I2_HID_DESCR_START                             ; Data source address
 0030 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0032 DE            DB  0xde                           ; Reserved 
 0033           .ENDLITERAL
 0033           
 0033           ;----------------------------------------------------------------------
 0033           ; HID Report Descriptor transfer descriptor table
 0033           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_D0_C1_HID_RPT_DESCR_TABLE
 0033           .LITERAL
 0033           USBFS_D0_C1_HID_RPT_DESCR_TABLE:                 ;
 0033 02            DB      ((3) - 1)                 ; Number of table entries - 1
 0034 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 0035 003F          DW  USBFS_HID_REPORT_2_DESCR_SIZE                             ; Transfer size
 0037 0170          DW  USBFS_HID_REPORT_2_DESCR_START                             ; Data source address
 0039 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 003B DE            DB  0xde                           ; Reserved 
 003C 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 003D 0034          DW  USBFS_HID_REPORT_1_DESCR_SIZE                             ; Transfer size
 003F 013C          DW  USBFS_HID_REPORT_1_DESCR_START                             ; Data source address
 0041 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0043 DE            DB  0xde                           ; Reserved 
 0044 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 0045 0031          DW  USBFS_HID_REPORT_3_DESCR_SIZE                             ; Transfer size
 0047 01AF          DW  USBFS_HID_REPORT_3_DESCR_START                             ; Data source address
 0049 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 004B DE            DB  0xde                           ; Reserved 
 004C           .ENDLITERAL
 004C           ;----------------------------------------------------------------------
 004C           ; HID Report Lookup Table for (USBFS_D0_C1_I0)
 004C           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 004C           .LITERAL
 004C           USBFS_D0_C1_I0_HID_RPT_LOOKUP:                   
 004C 04            DB      (4)                       ; Table size
 004D 0059          DW      (USBFS_D0_C1_I0_IN_RPTS)                       ; Table entry
 004F 0000          DW      (NULL_PTR)                       ; Table entry
 0051 0062          DW      (USBFS_D0_C1_I0_OUT_RPTS)                       ; Table entry
 0053 0000          DW      (NULL_PTR)                       ; Table entry
 0055 006B          DW      (USBFS_D0_C1_I0_FEATURE_RPTS)                       ; Table entry
 0057 0000          DW      (NULL_PTR)                       ; Table entry
 0059           .ENDLITERAL
 0059           ;----------------------------------------------------------------------
 0059           ; HID IN Report Transfer Descriptor Table for ()
 0059           ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 0059           .LITERAL
 0059           USBFS_D0_C1_I0_IN_RPTS:                          
 0059 00            DB      ((1) - 1)                 ; Number of table entries - 1
 005A 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 005B 0008          DW  USBFS_HID_RPT_2_IN_RPT_SIZE                             ; Transfer size
 005D 0000          DW  USBFS_INTERFACE_0_IN_RPT_DATA                             ; Data source address
 005F 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0061 DE            DB  0xde                           ; Reserved 
 0062           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; HID OUT Report Transfer Descriptor Table for ()
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 0062           .LITERAL
 0062           USBFS_D0_C1_I0_OUT_RPTS:                         
 0062 00            DB      ((1) - 1)                 ; Number of table entries - 1
 0063 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 0064 0000          DW  USBFS_HID_RPT_2_OUT_RPT_SIZE                             ; Transfer size
 0066 0008          DW  USBFS_INTERFACE_0_OUT_RPT_DATA                             ; Data source address
 0068 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 006A DE            DB  0xde                           ; Reserved 
 006B           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; HID FEATURE Report Transfer Descriptor Table for ()
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 006B           .LITERAL
 006B           USBFS_D0_C1_I0_FEATURE_RPTS:                     
 006B 00            DB      ((1) - 1)                 ; Number of table entries - 1
 006C 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 006D 0008          DW  USBFS_HID_RPT_2_FEATURE_RPT_SIZE                             ; Transfer size
 006F 0010          DW  USBFS_INTERFACE_0_FEATURE_RPT_DATA                             ; Data source address
 0071 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0073 DE            DB  0xde                           ; Reserved 
 0074           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ;----------------------------------------------------------------------
                ; HID Report Lookup Table for (USBFS_D0_C1_I1)
                ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 0074           .LITERAL
 0074           USBFS_D0_C1_I1_HID_RPT_LOOKUP:                   
 0074 04            DB      (4)                       ; Table size
 0075 0081          DW      (USBFS_D0_C1_I1_IN_RPTS)                       ; Table entry
 0077 0000          DW      (NULL_PTR)                       ; Table entry
 0079 008A          DW      (USBFS_D0_C1_I1_OUT_RPTS)                       ; Table entry
 007B 0000          DW      (NULL_PTR)                       ; Table entry
 007D 0093          DW      (USBFS_D0_C1_I1_FEATURE_RPTS)                       ; Table entry
 007F 0000          DW      (NULL_PTR)                       ; Table entry
 0081           .ENDLITERAL
 0081           ;----------------------------------------------------------------------
 0081           ; HID IN Report Transfer Descriptor Table for ()
 0081           ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 0081           .LITERAL
 0081           USBFS_D0_C1_I1_IN_RPTS:                          
 0081 00            DB      ((1) - 1)                 ; Number of table entries - 1
 0082 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 0083 0008          DW  USBFS_HID_RPT_1_IN_RPT_SIZE                             ; Transfer size
 0085 0018          DW  USBFS_INTERFACE_1_IN_RPT_DATA                             ; Data source address
 0087 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0089 DE            DB  0xde                           ; Reserved 
 008A           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; HID OUT Report Transfer Descriptor Table for ()
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 008A           .LITERAL
 008A           USBFS_D0_C1_I1_OUT_RPTS:                         
 008A 00            DB      ((1) - 1)                 ; Number of table entries - 1
 008B 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 008C 0000          DW  USBFS_HID_RPT_1_OUT_RPT_SIZE                             ; Transfer size
 008E 0020          DW  USBFS_INTERFACE_1_OUT_RPT_DATA                             ; Data source address
 0090 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0092 DE            DB  0xde                           ; Reserved 
 0093           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; HID FEATURE Report Transfer Descriptor Table for ()
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 0093           .LITERAL
 0093           USBFS_D0_C1_I1_FEATURE_RPTS:                     
 0093 00            DB      ((1) - 1)                 ; Number of table entries - 1
 0094 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 0095 0008          DW  USBFS_HID_RPT_1_FEATURE_RPT_SIZE                             ; Transfer size
 0097 0028          DW  USBFS_INTERFACE_1_FEATURE_RPT_DATA                             ; Data source address
 0099 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 009B DE            DB  0xde                           ; Reserved 
 009C           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ;----------------------------------------------------------------------
                ; HID Report Lookup Table for (USBFS_D0_C1_I2)
                ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 009C           .LITERAL
 009C           USBFS_D0_C1_I2_HID_RPT_LOOKUP:                   
 009C 04            DB      (4)                       ; Table size
 009D 00A9          DW      (USBFS_D0_C1_I2_IN_RPTS)                       ; Table entry
 009F 0000          DW      (NULL_PTR)                       ; Table entry
 00A1 00B2          DW      (USBFS_D0_C1_I2_OUT_RPTS)                       ; Table entry
 00A3 0000          DW      (NULL_PTR)                       ; Table entry
 00A5 00BB          DW      (USBFS_D0_C1_I2_FEATURE_RPTS)                       ; Table entry
 00A7 0000          DW      (NULL_PTR)                       ; Table entry
 00A9           .ENDLITERAL
 00A9           ;----------------------------------------------------------------------
 00A9           ; HID IN Report Transfer Descriptor Table for ()
 00A9           ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 00A9           .LITERAL
 00A9           USBFS_D0_C1_I2_IN_RPTS:                          
 00A9 00            DB      ((1) - 1)                 ; Number of table entries - 1
 00AA 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 00AB 0008          DW  USBFS_HID_RPT_3_IN_RPT_SIZE                             ; Transfer size
 00AD 0030          DW  USBFS_INTERFACE_2_IN_RPT_DATA                             ; Data source address
 00AF 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 00B1 DE            DB  0xde                           ; Reserved 
 00B2           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; HID OUT Report Transfer Descriptor Table for ()
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 00B2           .LITERAL
 00B2           USBFS_D0_C1_I2_OUT_RPTS:                         
 00B2 00            DB      ((1) - 1)                 ; Number of table entries - 1
 00B3 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 00B4 0000          DW  USBFS_HID_RPT_3_OUT_RPT_SIZE                             ; Transfer size
 00B6 0038          DW  USBFS_INTERFACE_2_OUT_RPT_DATA                             ; Data source address
 00B8 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 00BA DE            DB  0xde                           ; Reserved 
 00BB           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; HID FEATURE Report Transfer Descriptor Table for ()
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  lit     (ROM,REL,CON)
 00BB           .LITERAL
 00BB           USBFS_D0_C1_I2_FEATURE_RPTS:                     
 00BB 00            DB      ((1) - 1)                 ; Number of table entries - 1
 00BC 01            DB  USB_DS_RAM                             ; Data source (USB_DS_*)
 00BD 0008          DW  USBFS_HID_RPT_3_FEATURE_RPT_SIZE                             ; Transfer size
 00BF 0040          DW  USBFS_INTERFACE_2_FEATURE_RPT_DATA                             ; Data source address
 00C1 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 00C3 DE            DB  0xde                           ; Reserved 
 00C4           .ENDLITERAL
                ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                
                ;----------------------------------------------------------------------
                ; Configuration Descriptor Table
                ;  for (USBFS_D0)
                ;
                ;       This table provides transfer descriptors for each USB Configuration
                ; Descriptor
                ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 00C4           .LITERAL
 00C4           USBFS_D0_CONFIG_DESCR_TABLE:                     ;
 00C4 00            DB      ((1) - 1)                 ; Number of table entries - 1
 00C5 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 00C6 0054          DW  USBFS_D0_C1_DESCR_SIZE                             ; Transfer size
 00C8 00E8          DW  USBFS_D0_C1_DESCR_START                             ; Data source address
 00CA 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 00CC DE            DB  0xde                           ; Reserved 
 00CD           .ENDLITERAL
 00CD           
 00CD           ;----------------------------------------------------------------------
 00CD           ; Device Descriptor Table
 00CD           ;
 00CD           ;	This table provides transfer descriptors for each USB Device Descriptor
 00CD           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_DEVICE_DESCR_TABLE
 00CD           .LITERAL
 00CD           USBFS_DEVICE_DESCR_TABLE:                        
 00CD 00            DB      ((1) - 1)                 ; Number of table entries - 1
 00CE 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 00CF 0012          DW  USBFS_D0_DESCR_SIZE                             ; Transfer size
 00D1 00D6          DW  USBFS_D0_DESCR_START                             ; Data source address
 00D3 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 00D5 DE            DB  0xde                           ; Reserved 
 00D6           .ENDLITERAL
 00D6           ;----------------------------------------------------------------------
 00D6           ;----------------------------------------------------------------------
 00D6           ; Interface 0 RAM Allocation (Reused across configurations)
 00D6           ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  InterruptRAM     (RAM,REL,CON)
                ;----------------------------------------------------------------------
                ; RAM allocation for IN Reports.
                ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_0_IN_RPT_DATA
                EXPORT USBFS_INTERFACE_0_IN_RPT_DATA
 0000           _USBFS_INTERFACE_0_IN_RPT_DATA:                  
 0000           USBFS_INTERFACE_0_IN_RPT_DATA:                   
 0000             BLK  8                                         ;
 0008           ;----------------------------------------------------------------------
 0008           ; RAM allocation for OUT Reports.
 0008           ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_0_OUT_RPT_DATA
                EXPORT USBFS_INTERFACE_0_OUT_RPT_DATA
 0008           _USBFS_INTERFACE_0_OUT_RPT_DATA:                 
 0008           USBFS_INTERFACE_0_OUT_RPT_DATA:                  
 0008             BLK  8                                         ;
 0010           ;----------------------------------------------------------------------
 0010           ; RAM allocation for FEATURE Reports.
 0010           ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_0_FEATURE_RPT_DATA
                EXPORT USBFS_INTERFACE_0_FEATURE_RPT_DATA
 0010           _USBFS_INTERFACE_0_FEATURE_RPT_DATA:             
 0010           USBFS_INTERFACE_0_FEATURE_RPT_DATA:              
 0010             BLK  8                                         ;
 0018           ;----------------------------------------------------------------------
                ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; Interface 1 RAM Allocation (Reused across configurations)
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  InterruptRAM     (RAM,REL,CON)
                ;----------------------------------------------------------------------
                ; RAM allocation for IN Reports.
                ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_1_IN_RPT_DATA
                EXPORT USBFS_INTERFACE_1_IN_RPT_DATA
 0018           _USBFS_INTERFACE_1_IN_RPT_DATA:                  
 0018           USBFS_INTERFACE_1_IN_RPT_DATA:                   
 0018             BLK  8                                         ;
 0020           ;----------------------------------------------------------------------
 0020           ; RAM allocation for OUT Reports.
 0020           ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_1_OUT_RPT_DATA
                EXPORT USBFS_INTERFACE_1_OUT_RPT_DATA
 0020           _USBFS_INTERFACE_1_OUT_RPT_DATA:                 
 0020           USBFS_INTERFACE_1_OUT_RPT_DATA:                  
 0020             BLK  8                                         ;
 0028           ;----------------------------------------------------------------------
 0028           ; RAM allocation for FEATURE Reports.
 0028           ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_1_FEATURE_RPT_DATA
                EXPORT USBFS_INTERFACE_1_FEATURE_RPT_DATA
 0028           _USBFS_INTERFACE_1_FEATURE_RPT_DATA:             
 0028           USBFS_INTERFACE_1_FEATURE_RPT_DATA:              
 0028             BLK  8                                         ;
 0030           ;----------------------------------------------------------------------
                ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; Interface 2 RAM Allocation (Reused across configurations)
                ;----------------------------------------------------------------------
                IF WIZARD_DEFINED_REPORT_STORAGE
                AREA  InterruptRAM     (RAM,REL,CON)
                ;----------------------------------------------------------------------
                ; RAM allocation for IN Reports.
                ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_2_IN_RPT_DATA
                EXPORT USBFS_INTERFACE_2_IN_RPT_DATA
 0030           _USBFS_INTERFACE_2_IN_RPT_DATA:                  
 0030           USBFS_INTERFACE_2_IN_RPT_DATA:                   
 0030             BLK  8                                         ;
 0038           ;----------------------------------------------------------------------
 0038           ; RAM allocation for OUT Reports.
 0038           ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_2_OUT_RPT_DATA
                EXPORT USBFS_INTERFACE_2_OUT_RPT_DATA
 0038           _USBFS_INTERFACE_2_OUT_RPT_DATA:                 
 0038           USBFS_INTERFACE_2_OUT_RPT_DATA:                  
 0038             BLK  8                                         ;
 0040           ;----------------------------------------------------------------------
 0040           ; RAM allocation for FEATURE Reports.
 0040           ;----------------------------------------------------------------------
                EXPORT _USBFS_INTERFACE_2_FEATURE_RPT_DATA
                EXPORT USBFS_INTERFACE_2_FEATURE_RPT_DATA
 0040           _USBFS_INTERFACE_2_FEATURE_RPT_DATA:             
 0040           USBFS_INTERFACE_2_FEATURE_RPT_DATA:              
 0040             BLK  8                                         ;
 0048           ;----------------------------------------------------------------------
                ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
                ;----------------------------------------------------------------------
                ; Device Descriptor (USBFS_D0)
                ; This marks the beginning of the Device Descriptor.  This descriptor
                ; concatenates all of the descriptors in the following format:
                ;       Device Descriptor
                ;               Configuration Descriptor (1)
                ;               Interface 1 Descriptor
                ;                               HID Descriptor 1
                ;                               Endpoint Descriptor(s)
                ;                       Interface 2 Descriptor
                ;                               HID Descriptor 2
                ;                                       Endpoint Descriptor(s)
                ;               Configuration Descriptor (2)
                ;                       Interface/HID/Endpoint...
                ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 00D6           .LITERAL
 00D6           USBFS_D0_DESCR_START:                            ;
 00D6 12          DB    18                                       ; Device Descriptor Length (18)
 00D7 01          DB    1                                        ; bDescriptorType: DEVICE
 00D8 0002        DWL   0200H                                    ; bcdUSB (ver 2.0)
 00DA 00          DB    0                                        ; bDeviceClass
 00DB 00          DB    0                                        ; bDeviceSubClass 
 00DC 00          DB    0                                        ; bDeviceProtocol 
 00DD 08          DB    8                                        ; bMaxPacketSize0
 00DE B404        DWL   4B4H                                     ; idVendor
 00E0 5280        DWL   8052H                                    ; idProduct
 00E2 0000        DWL   0000H                                    ; bcdDevice
 00E4 01          DB    STR_HASH_2                               ; iManufacturer
 00E5 02          DB    STR_HASH_3                               ; iProduct
 00E6 00          DB    STR_HASH_0                               ; iSerialNumber
 00E7 01          DB    1                                        ; bNumConfigurations
 00E8           USBFS_D0_DESCR_END:                              ;
 0012           USBFS_D0_DESCR_SIZE:  EQU    USBFS_D0_DESCR_END - USBFS_D0_DESCR_START
 00E8           
 00E8           ;----------------------------------------------------------------------
 00E8           ; Configuration Descriptor (USBFS_D0_C1)
 00E8           ; This marks the beginning of the Configuration Descriptor.  This descriptor
 00E8           ; concatenates all of the descriptors in the following format:
 00E8           ; Configuration Descriptor
 00E8           ;	Interface 1 Descriptor
 00E8           ;		HID Descriptor 1
 00E8           ;			Endpoint Descriptor(s)
 00E8           ;	Interface 2 Descriptor
 00E8           ;		HID Descriptor 2
 00E8           ;			Endpoint Descriptor(s)
 00E8           ;----------------------------------------------------------------------
 00E8           USBFS_D0_C1_DESCR_START:                         ;
 00E8 09          DB    9                                        ; Configuration Descriptor Length (9)
 00E9 02          DB    2                                        ; bDescriptorType: CONFIGURATION
 00EA 5400        DWL   USBFS_D0_C1_DESCR_SIZE                   ; wTotalLength
 00EC 03          DB    3                                        ; bNumInterfaces
 00ED 01          DB    1                                        ; bConfigurationValue
 00EE 00          DB    STR_HASH_0                               ; iConfiguration
 00EF A0          DB    80H | (0 << 6) | (1 << 5)                ; bmAttributes >
 00F0 32          DB    50                                       ; bMaxPower
 00F1           ;----------------------------------------------------------------------
 00F1           ; Interface Descriptor (USBFS_D0_C1_I0)
 00F1           ;----------------------------------------------------------------------
 00F1 09          DB    9                                        ; Interface Descriptor Length (9)
 00F2 04          DB    4                                        ; bDescriptorType: INTERFACE
 00F3 00          DB    0                                        ; bInterfaceNumber (zero based)
 00F4 00          DB    0                                        ; bAlternateSetting
 00F5 01          DB    1                                        ; bNumEndpoints
 00F6 03          DB    3                                        ; bInterfaceClass
 00F7 00          DB    0                                        ; bInterfaceSubClass
 00F8 00          DB    0                                        ; bInterfaceProtocol
 00F9 03          DB    STR_HASH_4                               ; iInterface
 00FA           ;----------------------------------------------------------------------
 00FA           ; HID Class Descriptor (USBFS_D0_C1_I0)
 00FA           ;----------------------------------------------------------------------
 00FA           USBFS_D0_C1_I0_HID_DESCR_START:                  
 00FA 09          DB    9                                        ; bLength--HID Class Descriptor Length (9)
 00FB 21          DB    0x21                                     ; bDescriptorType: HID Class
 00FC 1101        DWL   0x0111                                   ; bcdHID
 00FE 00          DB    0                                        ; bCountryCode
 00FF 01          DB    1                                        ; bNumDescriptors
 0100 22          DB    34                                       ; bDescriptorType
 0101 3F00        DWL   USBFS_HID_REPORT_2_DESCR_SIZE            ; wDescriptorLength
 0103           ;----------------------------------------------------------------------
 0103           ; Endpoint Descriptor (USBFS_D0_C1_I0_E0)
 0103           ;----------------------------------------------------------------------
 0103 07          DB    7                                        ; Endpoint Descriptor Length (7)
 0104 05          DB    5                                        ; bDescriptorType: ENDPOINT
 0105 81          DB    (EP1 | USB_DIR_IN)                       ; bEndpointAddress
 0106 03          DB    3                                        ; bmAttributes
 0107 0800        DWL   8                                        ; wMaxPacketSize
 0109 0A          DB    10                                       ; bInterval
 010A           ;----------------------------------------------------------------------
 010A           ; Interface Descriptor (USBFS_D0_C1_I1)
 010A           ;----------------------------------------------------------------------
 010A 09          DB    9                                        ; Interface Descriptor Length (9)
 010B 04          DB    4                                        ; bDescriptorType: INTERFACE
 010C 01          DB    1                                        ; bInterfaceNumber (zero based)
 010D 00          DB    0                                        ; bAlternateSetting
 010E 01          DB    1                                        ; bNumEndpoints
 010F 03          DB    3                                        ; bInterfaceClass
 0110 00          DB    0                                        ; bInterfaceSubClass
 0111 00          DB    0                                        ; bInterfaceProtocol
 0112 04          DB    STR_HASH_5                               ; iInterface
 0113           ;----------------------------------------------------------------------
 0113           ; HID Class Descriptor (USBFS_D0_C1_I1)
 0113           ;----------------------------------------------------------------------
 0113           USBFS_D0_C1_I1_HID_DESCR_START:                  
 0113 09          DB    9                                        ; bLength--HID Class Descriptor Length (9)
 0114 21          DB    0x21                                     ; bDescriptorType: HID Class
 0115 1101        DWL   0x0111                                   ; bcdHID
 0117 00          DB    0                                        ; bCountryCode
 0118 01          DB    1                                        ; bNumDescriptors
 0119 22          DB    34                                       ; bDescriptorType
 011A 3400        DWL   USBFS_HID_REPORT_1_DESCR_SIZE            ; wDescriptorLength
 011C           ;----------------------------------------------------------------------
 011C           ; Endpoint Descriptor (USBFS_D0_C1_I1_E0)
 011C           ;----------------------------------------------------------------------
 011C 07          DB    7                                        ; Endpoint Descriptor Length (7)
 011D 05          DB    5                                        ; bDescriptorType: ENDPOINT
 011E 82          DB    (EP2 | USB_DIR_IN)                       ; bEndpointAddress
 011F 03          DB    3                                        ; bmAttributes
 0120 0800        DWL   8                                        ; wMaxPacketSize
 0122 0A          DB    10                                       ; bInterval
 0123           ;----------------------------------------------------------------------
 0123           ; Interface Descriptor (USBFS_D0_C1_I2)
 0123           ;----------------------------------------------------------------------
 0123 09          DB    9                                        ; Interface Descriptor Length (9)
 0124 04          DB    4                                        ; bDescriptorType: INTERFACE
 0125 02          DB    2                                        ; bInterfaceNumber (zero based)
 0126 00          DB    0                                        ; bAlternateSetting
 0127 01          DB    1                                        ; bNumEndpoints
 0128 03          DB    3                                        ; bInterfaceClass
 0129 00          DB    0                                        ; bInterfaceSubClass
 012A 00          DB    0                                        ; bInterfaceProtocol
 012B 05          DB    STR_HASH_6                               ; iInterface
 012C           ;----------------------------------------------------------------------
 012C           ; HID Class Descriptor (USBFS_D0_C1_I2)
 012C           ;----------------------------------------------------------------------
 012C           USBFS_D0_C1_I2_HID_DESCR_START:                  
 012C 09          DB    9                                        ; bLength--HID Class Descriptor Length (9)
 012D 21          DB    0x21                                     ; bDescriptorType: HID Class
 012E 1101        DWL   0x0111                                   ; bcdHID
 0130 00          DB    0                                        ; bCountryCode
 0131 01          DB    1                                        ; bNumDescriptors
 0132 22          DB    34                                       ; bDescriptorType
 0133 3100        DWL   USBFS_HID_REPORT_3_DESCR_SIZE            ; wDescriptorLength
 0135           ;----------------------------------------------------------------------
 0135           ; Endpoint Descriptor (USBFS_D0_C1_I2_E0)
 0135           ;----------------------------------------------------------------------
 0135 07          DB    7                                        ; Endpoint Descriptor Length (7)
 0136 05          DB    5                                        ; bDescriptorType: ENDPOINT
 0137 83          DB    (EP3 | USB_DIR_IN)                       ; bEndpointAddress
 0138 03          DB    3                                        ; bmAttributes
 0139 0800        DWL   8                                        ; wMaxPacketSize
 013B 0A          DB    10                                       ; bInterval
 013C           ;----------------------------------------------------------------------
 013C           USBFS_D0_C1_DESCR_END:
 0054           USBFS_D0_C1_DESCR_SIZE:	EQU	(USBFS_D0_C1_DESCR_END - USBFS_D0_C1_DESCR_START)
 013C           .ENDLITERAL
 013C           ;----------------------------------------------------------------------
 013C           ; HID Class Report Descriptors
 013C           ;
 013C           ; This section contains the HID Class Report Descriptors generated
 013C           ; by the USB User Module Descriptor Generator
 013C           ;
 013C           ;----------------------------------------------------------------------
 013C           ; HID Report Descriptor (HID_RPT_1}
 013C           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 013C           .LITERAL
 013C           USBFS_HID_REPORT_1_DESCR_START:                  ;
 013C 0501          DB     05H, 01H                              ; Usage Page
 013E 0902          DB     09H, 02H                              ; Usage
 0140 A101          DB     A1H, 01H                              ; Collection
 0142 0901          DB     09H, 01H                              ; Usage
 0144 A100          DB     A1H, 00H                              ; Collection
 0146 0509          DB     05H, 09H                              ; Usage Page
 0148 1901          DB     19H, 01H                              ; Usage Minimum
 014A 2903          DB     29H, 03H                              ; Usage Maximum
 014C 1500          DB     15H, 00H                              ; Logical Minimum
 014E 2501          DB     25H, 01H                              ; Logical Maximum
 0150 9503          DB     95H, 03H                              ; Report Count
 0152 7501          DB     75H, 01H                              ; Report Size
 0154 8102          DB     81H, 02H                              ; Input
 0156 9501          DB     95H, 01H                              ; Report Count
 0158 7505          DB     75H, 05H                              ; Report Size
 015A 8101          DB     81H, 01H                              ; Input
 015C 0501          DB     05H, 01H                              ; Usage Page
 015E 0930          DB     09H, 30H                              ; Usage
 0160 0931          DB     09H, 31H                              ; Usage
 0162 1680FF        DB     16H, 80H, FFH                         ; Logical Minimum
 0165 268000        DB     26H, 80H, 00H                         ; Logical Maximum
 0168 7508          DB     75H, 08H                              ; Report Size
 016A 9502          DB     95H, 02H                              ; Report Count
 016C 8106          DB     81H, 06H                              ; Input
 016E C0            DB     C0H                                   ; End Collection
 016F C0            DB     C0H                                   ; End Collection
 0170           USBFS_HID_REPORT_1_DESCR_END:                    ;
 0034           USBFS_HID_REPORT_1_DESCR_SIZE:  EQU    (USBFS_HID_REPORT_1_DESCR_END - USBFS_HID_REPORT_1_DESCR_START)
 0170           .ENDLITERAL
 0170           ;----------------------------------------------------------------------
 0170           ; End HID Report Descriptor (HID_RPT_1}
 0170           ;----------------------------------------------------------------------
 0170           ; HID Report Descriptor (HID_RPT_2}
 0170           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 0170           .LITERAL
 0170           USBFS_HID_REPORT_2_DESCR_START:                  ;
 0170 0501          DB     05H, 01H                              ; Usage Page
 0172 0906          DB     09H, 06H                              ; Usage
 0174 A101          DB     A1H, 01H                              ; Collection
 0176 0507          DB     05H, 07H                              ; Usage Page
 0178 19E0          DB     19H, E0H                              ; Usage Minimum
 017A 29E7          DB     29H, E7H                              ; Usage Maximum
 017C 1500          DB     15H, 00H                              ; Logical Minimum
 017E 2501          DB     25H, 01H                              ; Logical Maximum
 0180 7501          DB     75H, 01H                              ; Report Size
 0182 9508          DB     95H, 08H                              ; Report Count
 0184 8102          DB     81H, 02H                              ; Input
 0186 9501          DB     95H, 01H                              ; Report Count
 0188 7508          DB     75H, 08H                              ; Report Size
 018A 8101          DB     81H, 01H                              ; Input
 018C 9505          DB     95H, 05H                              ; Report Count
 018E 7501          DB     75H, 01H                              ; Report Size
 0190 0508          DB     05H, 08H                              ; Usage Page
 0192 1901          DB     19H, 01H                              ; Usage Minimum
 0194 2905          DB     29H, 05H                              ; Usage Maximum
 0196 B102          DB     B1H, 02H                              ; Feature
 0198 9501          DB     95H, 01H                              ; Report Count
 019A 7503          DB     75H, 03H                              ; Report Size
 019C B101          DB     B1H, 01H                              ; Feature
 019E 9506          DB     95H, 06H                              ; Report Count
 01A0 7508          DB     75H, 08H                              ; Report Size
 01A2 1500          DB     15H, 00H                              ; Logical Minimum
 01A4 2565          DB     25H, 65H                              ; Logical Maximum
 01A6 0507          DB     05H, 07H                              ; Usage Page
 01A8 1900          DB     19H, 00H                              ; Usage Minimum
 01AA 2965          DB     29H, 65H                              ; Usage Maximum
 01AC 8100          DB     81H, 00H                              ; Input
 01AE C0            DB     C0H                                   ; End Collection
 01AF           USBFS_HID_REPORT_2_DESCR_END:                    ;
 003F           USBFS_HID_REPORT_2_DESCR_SIZE:  EQU    (USBFS_HID_REPORT_2_DESCR_END - USBFS_HID_REPORT_2_DESCR_START)
 01AF           .ENDLITERAL
 01AF           ;----------------------------------------------------------------------
 01AF           ; End HID Report Descriptor (HID_RPT_2}
 01AF           ;----------------------------------------------------------------------
 01AF           ; HID Report Descriptor (HID_RPT_3}
 01AF           ;----------------------------------------------------------------------
                AREA  lit     (ROM,REL,CON)
 01AF           .LITERAL
 01AF           USBFS_HID_REPORT_3_DESCR_START:                  ;
 01AF 0501          DB     05H, 01H                              ; Usage Page
 01B1 0905          DB     09H, 05H                              ; Usage
 01B3 A101          DB     A1H, 01H                              ; Collection
 01B5 0901          DB     09H, 01H                              ; Usage
 01B7 A100          DB     A1H, 00H                              ; Collection
 01B9 0930          DB     09H, 30H                              ; Usage
 01BB 0931          DB     09H, 31H                              ; Usage
 01BD 1500          DB     15H, 00H                              ; Logical Minimum
 01BF 26FF00        DB     26H, FFH, 00H                         ; Logical Maximum
 01C2 7508          DB     75H, 08H                              ; Report Size
 01C4 9502          DB     95H, 02H                              ; Report Count
 01C6 8102          DB     81H, 02H                              ; Input
 01C8 C0            DB     C0H                                   ; End Collection
 01C9 0509          DB     05H, 09H                              ; Usage Page
 01CB 1901          DB     19H, 01H                              ; Usage Minimum
 01CD 2905          DB     29H, 05H                              ; Usage Maximum
 01CF 1500          DB     15H, 00H                              ; Logical Minimum
 01D1 2501          DB     25H, 01H                              ; Logical Maximum
 01D3 7501          DB     75H, 01H                              ; Report Size
 01D5 9505          DB     95H, 05H                              ; Report Count
 01D7 8102          DB     81H, 02H                              ; Input
 01D9 9501          DB     95H, 01H                              ; Report Count
 01DB 7503          DB     75H, 03H                              ; Report Size
 01DD 8103          DB     81H, 03H                              ; Input
 01DF C0            DB     C0H                                   ; End Collection
 01E0           USBFS_HID_REPORT_3_DESCR_END:                    ;
 0031           USBFS_HID_REPORT_3_DESCR_SIZE:  EQU    (USBFS_HID_REPORT_3_DESCR_END - USBFS_HID_REPORT_3_DESCR_START)
 01E0           .ENDLITERAL
 01E0           ;----------------------------------------------------------------------
 01E0           ; End HID Report Descriptor (HID_RPT_3}
 01E0           ;----------------------------------------------------------------------
 01E0           ; HID Report Sizes (HID_RPT_1}
 01E0           ;----------------------------------------------------------------------
 0008           USBFS_HID_RPT_1_IN_RPT_SIZE:  EQU    8           ; TODO: Optimize report size
 01E0           ;----------------------------------------------------------------------
 0000           USBFS_HID_RPT_1_OUT_RPT_SIZE:  EQU    0          ; No OUT Reports are defined.  Size set to 0.
 01E0           ;----------------------------------------------------------------------
 0008           USBFS_HID_RPT_1_FEATURE_RPT_SIZE:  EQU    8      ; TODO: Optimize report size
 01E0           ;----------------------------------------------------------------------
 01E0           ; HID Report Sizes (HID_RPT_2}
 01E0           ;----------------------------------------------------------------------
 0008           USBFS_HID_RPT_2_IN_RPT_SIZE:  EQU    8           ; TODO: Optimize report size
 01E0           ;----------------------------------------------------------------------
 0000           USBFS_HID_RPT_2_OUT_RPT_SIZE:  EQU    0          ; No OUT Reports are defined.  Size set to 0.
 01E0           ;----------------------------------------------------------------------
 0008           USBFS_HID_RPT_2_FEATURE_RPT_SIZE:  EQU    8      ; TODO: Optimize report size
 01E0           ;----------------------------------------------------------------------
 01E0           ; HID Report Sizes (HID_RPT_3}
 01E0           ;----------------------------------------------------------------------
 0008           USBFS_HID_RPT_3_IN_RPT_SIZE:  EQU    8           ; TODO: Optimize report size
 01E0           ;----------------------------------------------------------------------
 0000           USBFS_HID_RPT_3_OUT_RPT_SIZE:  EQU    0          ; No OUT Reports are defined.  Size set to 0.
 01E0           ;----------------------------------------------------------------------
 0008           USBFS_HID_RPT_3_FEATURE_RPT_SIZE:  EQU    8      ; TODO: Optimize report size
 01E0           ;----------------------------------------------------------------------
 01E0           ;----------------------------------------------------------------------
 01E0           ; USB String Descriptors
 01E0           ;
 01E0           ; This section contains the USB String Descriptors generated
 01E0           ; by the USB User Module Descriptor Generator
 01E0           ;
 01E0           ; Note:  The string labels are internally generated by the
 01E0           ; descriptor generator
 01E0           ;
 01E0           ; Descriptors that reference string descriptors, use a hashed
 01E0           ; symbol that is set in an EQU directive with each string
 01E0           ; descriptor.
 01E0           ;----------------------------------------------------------------------
 0000           STR_HASH_0:  EQU    0                            ; String Hash for the null string
                AREA  lit     (ROM,REL,CON)
                EXPORT USBFS_StringTable
 01E0           .LITERAL
 01E0           USBFS_StringTable:                               
 01E0 05            DB      ((6) - 1)                 ; Number of table entries - 1
 01E1 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 01E2 0004          DW  LANGID_DESCR_SIZE                             ; Transfer size
 01E4 0211          DW  LANGID_DESCR_START                             ; Data source address
 01E6 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 01E8 DE            DB  0xde                           ; Reserved 
 01E9 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 01EA 001E          DW  STRING_2_DESCR_SIZE                             ; Transfer size
 01EC 0215          DW  STRING_2_DESCR_START                             ; Data source address
 01EE 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 01F0 DE            DB  0xde                           ; Reserved 
 01F1 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 01F2 001A          DW  STRING_3_DESCR_SIZE                             ; Transfer size
 01F4 0233          DW  STRING_3_DESCR_START                             ; Data source address
 01F6 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 01F8 DE            DB  0xde                           ; Reserved 
 01F9 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 01FA 001A          DW  STRING_4_DESCR_SIZE                             ; Transfer size
 01FC 024D          DW  STRING_4_DESCR_START                             ; Data source address
 01FE 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0200 DE            DB  0xde                           ; Reserved 
 0201 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 0202 0014          DW  STRING_5_DESCR_SIZE                             ; Transfer size
 0204 0267          DW  STRING_5_DESCR_START                             ; Data source address
 0206 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0208 DE            DB  0xde                           ; Reserved 
 0209 00            DB  USB_DS_ROM                             ; Data source (USB_DS_*)
 020A 0018          DW  STRING_6_DESCR_SIZE                             ; Transfer size
 020C 027B          DW  STRING_6_DESCR_START                             ; Data source address
 020E 0000          DW  NULL_PTR                             ; Transfer Completion Status Block Address
 0210 DE            DB  0xde                           ; Reserved 
 0211           ;----------------------------------------------------------------------
 0211           ; LANGID Descriptor
 0211           ;----------------------------------------------------------------------
 0211           LANGID_DESCR_START:                              
 0211 04          DB    ((1 * 2) + 2)                            ; bLength (N+2)
 0212 03          DB    3                                        ; bDescriptorType (STRING)
 0213 0904        DWL   1033                                     ;
 0215           LANGID_DESCR_END:                                
 0004           LANGID_DESCR_SIZE:  EQU    (LANGID_DESCR_END - LANGID_DESCR_START)
 0215           ;----------------------------------------------------------------------
 0215           ; String Desciptor
 0215           ;----------------------------------------------------------------------
 0001           STR_HASH_2:  EQU    1                            ; String Hash
 0215           STRING_2_DESCR_START:                            
 0215 1E          DB    STRING_2_DESCR_SIZE                      ; bLength
 0216 03          DB    3                                        ; bDescriptorType (STRING)
 0217 4A0075006C00690061006E0020004D00610064006500200049007400   DSU   "Julian Made It"                         ;
 0233           STRING_2_DESCR_END:                              
 001E           STRING_2_DESCR_SIZE:  EQU    (STRING_2_DESCR_END - STRING_2_DESCR_START)
 0233           ;----------------------------------------------------------------------
 0233           ; String Desciptor
 0233           ;----------------------------------------------------------------------
 0002           STR_HASH_3:  EQU    2                            ; String Hash
 0233           STRING_3_DESCR_START:                            
 0233 1A          DB    STRING_3_DESCR_SIZE                      ; bLength
 0234 03          DB    3                                        ; bDescriptorType (STRING)
 0235 4D0079002000540065006C00650074006F00750063006800   DSU   "My Teletouch"                           ;
 024D           STRING_3_DESCR_END:                              
 001A           STRING_3_DESCR_SIZE:  EQU    (STRING_3_DESCR_END - STRING_3_DESCR_START)
 024D           ;----------------------------------------------------------------------
 024D           ; String Desciptor
 024D           ;----------------------------------------------------------------------
 0003           STR_HASH_4:  EQU    3                            ; String Hash
 024D           STRING_4_DESCR_START:                            
 024D 1A          DB    STRING_4_DESCR_SIZE                      ; bLength
 024E 03          DB    3                                        ; bDescriptorType (STRING)
 024F 4A004D00490020004B006500790062006F00610072006400   DSU   "JMI Keyboard"                           ;
 0267           STRING_4_DESCR_END:                              
 001A           STRING_4_DESCR_SIZE:  EQU    (STRING_4_DESCR_END - STRING_4_DESCR_START)
 0267           ;----------------------------------------------------------------------
 0267           ; String Desciptor
 0267           ;----------------------------------------------------------------------
 0004           STR_HASH_5:  EQU    4                            ; String Hash
 0267           STRING_5_DESCR_START:                            
 0267 14          DB    STRING_5_DESCR_SIZE                      ; bLength
 0268 03          DB    3                                        ; bDescriptorType (STRING)
 0269 4A004D00490020004D006F00750073006500   DSU   "JMI Mouse"                              ;
 027B           STRING_5_DESCR_END:                              
 0014           STRING_5_DESCR_SIZE:  EQU    (STRING_5_DESCR_END - STRING_5_DESCR_START)
 027B           ;----------------------------------------------------------------------
 027B           ; String Desciptor
 027B           ;----------------------------------------------------------------------
 0005           STR_HASH_6:  EQU    5                            ; String Hash
 027B           STRING_6_DESCR_START:                            
 027B 18          DB    STRING_6_DESCR_SIZE                      ; bLength
 027C 03          DB    3                                        ; bDescriptorType (STRING)
 027D 4A004D0049002000470061006D006500700061006400   DSU   "JMI Gamepad"                            ;
 0293           STRING_6_DESCR_END:                              
 0018           STRING_6_DESCR_SIZE:  EQU    (STRING_6_DESCR_END - STRING_6_DESCR_START)
 0293           .ENDLITERAL
 0293           
 0293           ;-----------------------------------------------
 0293           ; End of Descriptors
 0293           ;-----------------------------------------------
 0293           
                ENDIF
                   ;---------------------------------------------------
                   ;@PSoC_UserCode_BODY_2@ (Do not change this line.)
                   ;---------------------------------------------------
                   ; Redefine your descriptor table below. You might
                   ; cut and paste code from the WIZARD descriptor
                   ; above and then make your changes.
                   ;---------------------------------------------------
                
                   
                   ;---------------------------------------------------
                   ; Insert your custom code above this banner
                   ;---------------------------------------------------
                   ;@PSoC_UserCode_END@ (Do not change this line.)
                ; End of File USBFS_descr.asm
